@model IEnumerable<GTERP.Models.Representative>

<div class="container-fluid">

    <div class="text-center">
        <div class="row mb-2">

            <div class="col">
                @Html.ActionLink("Representative Creation", "Create", null, null, new { @class = "btn btn-outline-info btn-block", @id = "btnBack" })

            </div>

            <div class="col">
                <h2 id="styletext">Representative List</h2>
            </div>
            <div class="col-lg-7">

            </div>

        </div>

    </div>

    <form class="card p-2">
        <div class="table-responsive text-nowrap">
            <table id="tbllist" class="table table-striped table-bordered table-sm  table-hover text-center" cellspacing="0" width="100%">
                <thead class="">
                    <tr>

                        <th>
                            @Html.DisplayNameFor(model => model.RepresentativeName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.RepresentativeAddress)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.RepresentativeMobile)
                        </th>
                        <th></th>
                    </tr>
                </thead>


                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.RepresentativeName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RepresentativeAddress)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RepresentativeMobile)
                        </td>
                        <td>
                            <span data-toggle="tooltip" title="Edit!">
                                @Html.ActionLink(" ", "Edit", new { id = item.RepresentativeId }, new { @class = "fas fa-edit btn btn-warning btn-xs", @target = "_blank" })
                            </span>
                            <span data-toggle="tooltip" title="Delete!">
                                @Html.ActionLink(" ", "Delete", new { Id = item.RepresentativeId }, new { @class = "far fa-trash-alt btn btn-danger btn-xs" })
                            </span>


                        </td>
                    </tr>
                }

            </table>
        </div>
        <br />
    </form>
</div>



@section Scripts{
    <script>
        $(document).ready(function () {
            $('#tbllist thead tr').clone(true).appendTo('#tbllist thead');
            $('#tbllist thead:last tr:eq(0) th').each(function (i) {
                var title = $(this).text().trim();
                $(this).html('<input type="text" class="form-control"   placeholder="' + title + '" />');

                $('input', this).on('keyup change', function () {
                    if (table.column(i).search() !== this.value) {
                        table
                            .column(i)
                            .search(this.value)
                            .draw();
                    }
                });
            });

            var table = $('#tbllist').DataTable({
                dom: '<"dom_wrapper fh-fixedHeader"flB>tip',
                //"sDom": "<'row'<'col-sm-12'<'form-group'<f>>>>tr<'row'<'col-sm-12'<'pull-left'i><'pull-right'p><'clearfix'>>>",
                //buttons: [
                //    'copy', 'csv', 'excel', 'pdf'
                //],
                buttons: {
                    dom: {
                        button: {
                            className: 'btn rounded-0'
                        }
                    },
                    buttons: [
                        //'copy', 'csv', 'excel', 'pdf'
                        //$(this).addClass("btn-group dt-buttons justify-content-center mb-3")
                        {
                            extend: 'colvis',
                            "columns": ':not(:last-child)',
                            text: '<i class="mdi mdi-view-column"></i>',
                            className: 'btn-info',
                            titleAttr: 'Show / hide columns',
                            //collectionLayout: 'fixed two-column'

                        },
                        {
                            extend: 'excel',
                            text: '<i class="mdi mdi-file-excel"></i>',
                            className: 'btn-success',
                            titleAttr: 'Export to excel',
                            exportOptions: {
                                columns: ':visible',
                                rows: ':visible'
                            }
                        }

                    ]
                },
                "searching": true,
                "ordering": true,
                "info": true,
                "iDisplayLength": 15,
                "lengthMenu": [[5, 15, 20, 50, -1], [5, 15, 20, 50, "All"]],
                "scrollX": true,
                "scrollY": "60vh",
                language: {
                    sLengthMenu: "_MENU_",
                    search: "",
                    searchPlaceholder: "Search..."
                },
                dom: 'Blfrtip'
            });
        });

                                    //$(".search_input").addClass('form-control input-lg col-xs-12');

    </script>
}



