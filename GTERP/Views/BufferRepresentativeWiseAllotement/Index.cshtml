@model IEnumerable<GTERP.Models.Buffers.RepresentativeBooking>

<div class="container-fluid">

    <div class="text-center">
        <div class="row">

            <div class="col">
                @Html.ActionLink("Create Carrier Booking", "Create", null, null, new { @class = "btn btn-outline-info btn-block", @id = "btnBack" })
            </div>
            <div class="col">
                <h2 id="styletext">Buffer Carrier Wise Booking</h2>
            </div>
            <div class="col-lg-4">
            </div>

        </div>

    </div>
    <div class="table-responsive">
        <table id="table"  class="table table-sm table-striped table-bordered table-hover text-nowrap " cellspacing="0" width="100%">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.OrderNo)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.YearName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MonthName)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.BufferList.BufferName)
                    </th>
                    <th>
                        Carrier Code
                    </th>
                    <th>
                        Carrier Name
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.AllotmentQty)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DateAdded)
                    </th>
                    <th>Action</th>
                </tr>
            </thead>
            @{
                int sl = 0;
            }
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>

                        <td>
                            @Html.DisplayFor(modelItem => item.OrderNo)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.YearName.FYName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MonthName.MonthName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BufferList.BufferName)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.BufferRepresentative.RepresentativeCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BufferRepresentative.RepresentativeName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AllotmentQty)
                        </td>
                        <td>
                            @String.Format("{0:MMM d, yyyy}", item.DateAdded)
                        </td>
                        <td>
                            <button class="btn btn-warning">
                                <a asp-action="Edit" asp-route-bookingId="@item.RepresentativeBookingId" >
                                    Edit
                                </a>
                            </button>
                            <input id="RepresentativeBookingId_@sl" value="@item.RepresentativeBookingId" hidden />
                            <button class="btn btn-danger" onclick="Delete(@sl)">Delete</button>
                        </td>
                    </tr>
                    sl++;
                }
            </tbody>
        </table>
    </div>

    @* <div id="finalpanel" class="card p-2">

    <div class="table-responsive text-nowrap">
    <table id="tblbufferlist" class="table tbllist table-striped table-bordered table-sm" cellspacing="0" width="100%">
    <thead>
    <tr></tr>
    </thead>
    <tbody></tbody>
    <tfoot>
    <tr></tr>
    </tfoot>
    </table>

    </div>
    </div>*@

</div>






@section Scripts{
    <script>

         function Delete(sl){
            var Id = $(`#RepresentativeBookingId_${sl}`).val();
            if (confirm('Are you sure you want to delete this item?')) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Delete", "BufferRepresentativeWiseAllotement")',
                    dataType: 'json',
                    async: false,
                    data: { bookingId: Id },

                    success: function (res) {
                        alert(res.Msg);
                        if (res.flag == '1') {
                            location.reload();
                        }
                    }

                })
            }
            else {
            }
        }
        
        $(document).ready(function () {
            $('#table').DataTable({


                dom: '<"dom_wrapper fh-fixedHeader"flB>tip',


                buttons: {
                    dom: {
                        button: {
                            className: 'btn rounded-0'
                        }
                    },
                    buttons: [
                        //'copy', 'csv', 'excel', 'pdf'
                        //$(this).addClass("btn-group dt-buttons justify-content-center mb-3")
                        {
                            extend: 'colvis',
                            "columns": ':not(:last-child)',
                            text: '<i class="mdi mdi-view-column"></i>',
                            className: 'btn-info',
                            titleAttr: 'Show / hide columns',
                            //collectionLayout: 'fixed two-column'

                        },

                        {
                            extend: 'excel',
                            text: '<i class="mdi mdi-file-excel"></i>',
                            className: 'btn-success',
                            titleAttr: 'Export to excel'
                        },
                        {
                            extend: 'pdfHtml5',
                            orientation: 'landscape',
                            pageSize: 'LEGAL',
                            text: '<i class="mdi mdi-file-pdf"></i>',
                            className: 'btn-danger',
                            titleAttr: 'Export to PDF',
                            //exportOptions: {
                            //    columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
                            //}

                        },
                        {
                            extend: 'print',
                            text: '<i class="mdi mdi-printer"></i>',
                            className: 'btn-info',
                            titleAttr: 'Print Table'
                        }

                    ]
                },
                language: {
                    sLengthMenu: "_MENU_",
                    search: "",
                    searchPlaceholder: "Search..."
                },
                "lengthMenu": [[ 10, 20, 50, 10000], [ 10, 20, 50, "All"]],
                "searching": true
            });

        })





    </script>
}
