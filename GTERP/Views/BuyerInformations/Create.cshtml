@model GTERP.Models.BuyerInformation
@*<script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

    <link href="~/Content/css/select2.min.css" rel="stylesheet" />
    <script src="~/Scripts/select2.min.js"></script>*@

<style>

    #styletext {
        color: transparent;
        background: #666666;
        -webkit-background-clip: text;
        -moz-background-clip: text;
        background-clip: text;
        text-shadow: 0px 3px 3px rgba(255,255,255,0.5);
        font-weight: 100;
        font-size: 40px;
    }
</style>



@using (Html.BeginForm("Create", "BuyerInformations", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @*@Html.AntiForgeryToken()*@

    <div class="container" style="max-width: 700px;">
        <div class="py-7 text-center">
            @*<img class="d-block mx-auto mb-4" src="https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg" alt="" width="72" height="72">*@
            <h1 id="styletext">Buyer Information</h1>
            <p class="lead"></p>
        </div>
        @*<hr />*@
        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
        @if (Model != null)
        {

            <input type="hidden" id="BuyerId" name="BuyerId" value="@Model.BuyerId" />
            <input type="hidden" id="Dateadded" name="Dateadded" value="@Model.DateAdded" />
            <input type="hidden" id="Addedby" name="Addedby" value="@Model.Addedby" />

        }
        else
        {
            <input type="hidden" asp-for="comid" value="0" />
            <input type="hidden" asp-for="BuyerId" value="0" />
        }


        <div id="modalbodyfahad" class="row card p-4">
            <div class="col-md-12 order-md-1">
                <h4 class="mb-3">Buyer @ViewBag.Title</h4>

                <form class="needs-validation card p-4" novalidate>
                    <div class="container">
                        <div class="row">
                            <div class="col mb-3">
                                @Html.LabelFor(model => model.BuyerSearchName)
                                @Html.EditorFor(model => model.BuyerSearchName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BuyerSearchName, "", new { @class = "text-danger" })

                            </div>

                        </div>
                        <div class="row">
                            <div class="col mb-3">
                                @Html.LabelFor(model => model.BuyerName)
                                @Html.EditorFor(model => model.BuyerName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BuyerName, "", new { @class = "text-danger" })

                            </div>

                        </div>
                        <div class="row">

                            <div class="col-md-6 mb-3">
                                @Html.LabelFor(model => model.BuyerGroupId, "Buyer Group")

                                @Html.DropDownList("BuyerGroupId", null, "--Please Select--", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.BuyerGroupId, "", new { @class = "text-danger" })

                            </div>
                            <div class="col-md-6 mb-3">
                                @Html.LabelFor(model => model.CountryId, "Countries")

                                @Html.DropDownList("CountryId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                @Html.LabelFor(model => model.EmployeeImport, "Import Person")

                                @Html.DropDownList("EmployeeIdImport", null, "--Please Select--", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.EmployeeImport, "", new { @class = "text-danger" })

                            </div>
                            <div class="col-md-6 mb-3">
                                @Html.LabelFor(model => model.EmployeeExport, "Export Person")

                                @Html.DropDownList("EmployeeIdExport", null, "--Please Select--", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.EmployeeExport, "", new { @class = "text-danger" })

                            </div>
                        </div>

                        <div class="row">

                            <div class="col mb-3">
                                @Html.LabelFor(model => model.ContactPerson)

                                @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })

                            </div>

                            <div class="col mb-3">
                                @Html.LabelFor(model => model.LCMargin)
                                @Html.EditorFor(model => model.LCMargin, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LCMargin, "", new { @class = "text-danger" })

                            </div>

                            <div class="col mb-3">
                                @Html.LabelFor(model => model.DefferredPaymentDays, new { @class = "col-form-label" })
                                @Html.EditorFor(model => model.DefferredPaymentDays, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DefferredPaymentDays, "", new { @class = "text-danger" })

                            </div>
                        </div>

                        <div class="row">

                            <div class="col mb-3">
                                @Html.LabelFor(model => model.DiscountPercentage)

                                @Html.EditorFor(model => model.DiscountPercentage, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DiscountPercentage, "", new { @class = "text-danger" })

                            </div>

                            <div class="col mb-3">
                                @Html.LabelFor(model => model.CMPPercentage)
                                @Html.EditorFor(model => model.CMPPercentage, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CMPPercentage, "", new { @class = "text-danger" })

                            </div>
                        </div>



                        <div class="row">

                            <div class="col mb-3">
                                @Html.LabelFor(model => model.LocalOffice, new { htmlAttributes = new { @class = "control-label" } })
                                @Html.EditorFor(model => model.LocalOffice, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LocalOffice, "", new { @class = "text-danger" })

                            </div>



                            <div class="col mb-3">
                                @Html.LabelFor(model => model.Address, new { htmlAttributes = new { @class = "control-label" } })
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

                            </div>

                        </div>
                        <div class="row">

                            <div class="col mb-3">
                                @Html.LabelFor(model => model.Address2, new { htmlAttributes = new { @class = "control-label" } })
                                @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })

                            </div>

                        </div>
                        <div class="row">

                            <div class="col mb-3">
                                @Html.LabelFor(model => model.ShippingMarks, new { htmlAttributes = new { @class = "control-label" } })
                                @Html.EditorFor(model => model.ShippingMarks, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ShippingMarks, "", new { @class = "text-danger" })

                            </div>

                        </div>



                        <div class="row text-center m-2">
                            <br />
                            <div class="col-md-2"></div>
                            <div class="col-md-4 col-xs-12 d-block mx-auto">

                                @if (ViewBag.Title == "Create")
                                {
                                    <input type="submit" value="Save" class="btn btn-primary btn-md btn-block" />

                                    @*<button class="btn btn-primary btn-lg btn-block" type="button" onclick="Products_save()">Save</button>*@
                                }
                                else if (ViewBag.Title == "Edit")
                                {
                                    <input type="submit" value="Update" class="btn btn-warning btn-block" />

                                    @*<button class="btn btn-warning btn-lg btn-block" type="button" onclick="Products_save()">Update</button>*@
                                }
                                else if (ViewBag.Title == "Delete")
                                {
                                    <button class="btn btn-danger btn-md btn-block" type="button" onclick="Buyer_delete()">Delete</button>
                                }


                            </div>
                            <div class="col-md-4 col-xs-12 d-block mx-auto">
                                @Html.ActionLink("Back", "Index", "BuyerInformations", null, new { @class = "btn btn-info btn-block", @id = "btnBack" })

                            </div>
                            <div class="col-md-2"></div>

                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <p id="demo"></p>
}





@section Scripts {




    <script>
        var x = document.getElementById("demo");

        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition);
            } else {
                x.innerHTML = "Geolocation is not supported by this browser.";
            }
        }

        function showPosition(position) {
            x.innerHTML = "Latitude: " + position.coords.latitude +
                "<br>Longitude: " + position.coords.longitude;
        }
    </script>


    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script>

        $("#CountryId").select2();
        $("#BuyerGroupId").select2();
        $("#EmployeeIdImport").select2();
        $("#EmployeeIdExport").select2();



    function Buyer_delete() {

        var BuyerId = $("#BuyerId").val();
            //alert(SalesId);
            $.ajax({

                url: '@Url.Action("Delete", "BuyerInformations")',
                //url: '@Url.Action("Delete")',
                data: JSON.stringify({ id: BuyerId }), //use id here
                //data: JSON.stringify(salesmain),
                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (result) {
                if (result.Success == "1") {
                    customFile('3', result.ex);
                    window.setTimeout(function () {
                        // Move to a new location or you can do something else
                        window.location.href = '@Url.Action("Index", "BuyerInformations")';
                    }, 500);

                }
                else {
                    //alert();
                    toastr.error(result.ex)
                    //if (!result.success) {
                    //    for (var error in result.errors) {
                    //        $('#errorMessages').append(error + '<br />');
                    //    }
                    //}
                }
            }
            });
    }



    </script>

}


