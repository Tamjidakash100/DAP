// <auto-generated />
using System;
using GTERP.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GTERP.Migrations.GTRDB
{
    [DbContext(typeof(GTRDBContext))]
    [Migration("20200407155158_HRProcessLock")]
    partial class HRProcessLock
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GTERP.Models.ApprovedBy", b =>
                {
                    b.Property<int>("ApprovedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ApprovedByShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.Property<int?>("userid")
                        .HasColumnType("int");

                    b.HasKey("ApprovedById");

                    b.ToTable("ApprovedBys");
                });

            modelBuilder.Entity("GTERP.Models.Attachment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("FileContent")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("GTERP.Models.AttachmentMain", b =>
                {
                    b.Property<int>("AttachmentMainID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AttachmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AttachmentDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BasedId")
                        .HasColumnType("int");

                    b.Property<string>("BasedOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Wid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AttachmentMainID");

                    b.ToTable("AttachmentMains");
                });

            modelBuilder.Entity("GTERP.Models.AttachmentSub", b =>
                {
                    b.Property<int>("AttachmentSubID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttachmentMainId")
                        .HasColumnType("int");

                    b.Property<byte[]>("FileContent")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttachmentSubID");

                    b.HasIndex("AttachmentMainId");

                    b.ToTable("AttachmentSubs");
                });

            modelBuilder.Entity("GTERP.Models.BankAccountNo", b =>
                {
                    b.Property<int>("BankAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankAccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("OpeningBankId")
                        .HasColumnType("int");

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("useridupdate")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("BankAccountId");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("OpeningBankId");

                    b.ToTable("BankAccountNos");
                });

            modelBuilder.Entity("GTERP.Models.BankAccountNoLienBank", b =>
                {
                    b.Property<int>("LienBankAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankAccountNumber")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(100);

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("LienBankId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("SwiftCodeBankAccountNoLienBank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("useridupdate")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("LienBankAccountId");

                    b.HasIndex("BuyerId");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("CountryId");

                    b.HasIndex("LienBankId");

                    b.HasIndex("SupplierId");

                    b.ToTable("BankAccountNoLienBanks");
                });

            modelBuilder.Entity("GTERP.Models.BrandInfo", b =>
                {
                    b.Property<int>("BrandInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("BrandInfoId");

                    b.ToTable("BrandInfo");
                });

            modelBuilder.Entity("GTERP.Models.BusinessType", b =>
                {
                    b.Property<int>("BusinessTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusinessTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BusinessTypeId");

                    b.ToTable("BusinessType");
                });

            modelBuilder.Entity("GTERP.Models.BuyerGroup", b =>
                {
                    b.Property<int>("BuyerGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuyerGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuyerGroupName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(100);

                    b.Property<string>("BuyerGroupShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("BuyerGroupId");

                    b.ToTable("BuyerGroups");
                });

            modelBuilder.Entity("GTERP.Models.BuyerInformation", b =>
                {
                    b.Property<int>("BuyerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuyerGroupId")
                        .HasColumnType("int");

                    b.Property<string>("BuyerName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(200);

                    b.Property<string>("BuyerSearchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CMPPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DefferredPaymentDays")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EmployeeIdExport")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeIdImport")
                        .HasColumnType("int");

                    b.Property<decimal?>("LCMargin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LocalOffice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("BuyerId");

                    b.HasIndex("BuyerGroupId");

                    b.HasIndex("CountryId");

                    b.HasIndex("EmployeeIdExport");

                    b.HasIndex("EmployeeIdImport");

                    b.ToTable("BuyerInformation");
                });

            modelBuilder.Entity("GTERP.Models.COM_BBLC_Details", b =>
                {
                    b.Property<int>("BBLCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("COM_BBLC_MasterBBLCId")
                        .HasColumnType("int");

                    b.Property<int?>("COM_ProformaInvoicePIId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("PIId")
                        .HasColumnType("int");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BBLCId");

                    b.HasIndex("COM_BBLC_MasterBBLCId");

                    b.HasIndex("COM_ProformaInvoicePIId");

                    b.ToTable("COM_BBLC_Details");
                });

            modelBuilder.Entity("GTERP.Models.COM_BBLC_Master", b =>
                {
                    b.Property<int>("BBLCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AmdNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovalPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BBLCNo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("BBLCPrintDocDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BBLCPrintDocRef")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(50);

                    b.Property<decimal>("BBLCQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BBLCValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<decimal>("ConvertRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateApproval")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DayListId")
                        .HasColumnType("int");

                    b.Property<decimal>("DecreaseValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DestinationID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FirstShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GroupLCAverage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("GroupLCId")
                        .HasColumnType("int");

                    b.Property<decimal>("IncreaseValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Insurance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemGroupId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LcOpeningDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LienBankId")
                        .HasColumnType("int");

                    b.Property<decimal>("NetValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("OpeningBankId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentTerm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentTermsId")
                        .HasColumnType("int");

                    b.Property<string>("Percentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PortOfDischargeId")
                        .HasColumnType("int");

                    b.Property<int>("PortOfLoadingId")
                        .HasColumnType("int");

                    b.Property<string>("PrintDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShipModeId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Tenor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TradeTermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UDDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UDNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("useridUpdate")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("useridUpdateRefNo")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("BBLCId");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DayListId");

                    b.HasIndex("DestinationID");

                    b.HasIndex("GroupLCId");

                    b.HasIndex("LienBankId");

                    b.HasIndex("OpeningBankId");

                    b.HasIndex("PaymentTermsId");

                    b.HasIndex("PortOfDischargeId");

                    b.HasIndex("PortOfLoadingId");

                    b.HasIndex("ShipModeId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TradeTermId");

                    b.ToTable("COM_BBLC_Master");
                });

            modelBuilder.Entity("GTERP.Models.COM_CNFBillExportDetails", b =>
                {
                    b.Property<int>("CNFExpenseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedBY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("COM_CNFBillExportMasterCNFExpenseID")
                        .HasColumnType("int");

                    b.Property<int?>("COM_CNFExpenseTypesExpenseHeadID")
                        .HasColumnType("int");

                    b.Property<string>("CTN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpenseHeadID")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCheck")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CNFExpenseID");

                    b.HasIndex("COM_CNFBillExportMasterCNFExpenseID");

                    b.HasIndex("COM_CNFExpenseTypesExpenseHeadID");

                    b.ToTable("COM_CNFBillExportDetails");
                });

            modelBuilder.Entity("GTERP.Models.COM_CNFBillExportMaster", b =>
                {
                    b.Property<int>("CNFExpenseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CNFExpenseID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuyerID")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerInformationsBuyerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CNFEXpenseBillDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Comission")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ConversionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExportInvoiceMastersInvoiceId")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<decimal?>("InvoiceValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("JobNo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(200);

                    b.Property<string>("Messers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("CNFExpenseID");

                    b.HasIndex("BuyerInformationsBuyerId");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("ExportInvoiceMastersInvoiceId");

                    b.ToTable("COM_CNFBillExportMasters");
                });

            modelBuilder.Entity("GTERP.Models.COM_CNFBillImportDetails", b =>
                {
                    b.Property<int>("CNFExpenseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedBY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("COM_CNFBillImportMasterCNFExpenseID")
                        .HasColumnType("int");

                    b.Property<int?>("COM_CNFExpenseTypesExpenseHeadID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpenseHeadID")
                        .HasColumnType("int");

                    b.Property<bool>("IsCheck")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CNFExpenseID");

                    b.HasIndex("COM_CNFBillImportMasterCNFExpenseID");

                    b.HasIndex("COM_CNFExpenseTypesExpenseHeadID");

                    b.ToTable("COM_CNFBillImportDetailss");
                });

            modelBuilder.Entity("GTERP.Models.COM_CNFBillImportMaster", b =>
                {
                    b.Property<int>("CNFExpenseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CNFExpenseID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BBLCDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BBLCId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BLDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BLNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BondBENo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BondDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BuyerID")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerInformationsBuyerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CIAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CNFEXpenseBillDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("COM_BBLC_MastersBBLCId")
                        .HasColumnType("int");

                    b.Property<long?>("COM_CommercialInvoicesCommercialInvoiceId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Comission")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<long?>("CommercialInvoiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Consignment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ConversionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("JobNo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(200);

                    b.Property<string>("Line")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotationNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VasselName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("useridupdate")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("CNFExpenseID");

                    b.HasIndex("BuyerInformationsBuyerId");

                    b.HasIndex("COM_BBLC_MastersBBLCId");

                    b.HasIndex("COM_CommercialInvoicesCommercialInvoiceId");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("SupplierId");

                    b.ToTable("COM_CNFBillImportMasters");
                });

            modelBuilder.Entity("GTERP.Models.COM_CNFExpenseType", b =>
                {
                    b.Property<int>("ExpenseHeadID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("AmountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CNFExpenseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNFExpenseNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DefaultAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImportOrExport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("ExpenseHeadID");

                    b.ToTable("COM_CNFExpenseTypes");
                });

            modelBuilder.Entity("GTERP.Models.COM_CommercialInvoice", b =>
                {
                    b.Property<long>("CommercialInvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CommercialInvoiceId")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BBLCId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BLDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BLNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BillOfEntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BillOfEntryNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CommercialCompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CommercialInvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CommercialInvoiceNo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(30);

                    b.Property<int?>("CommercialLCTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ConversionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CustomAssesmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DocumentAssesmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DocumentReceiptDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ETBDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FidderVasel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GoodsInhouseDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ItemDescId")
                        .HasColumnType("int");

                    b.Property<string>("ItemDescList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ItemGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LCType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MachinaryLCId")
                        .HasColumnType("int");

                    b.Property<string>("MotherVassel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(500);

                    b.Property<int?>("SupplierID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPI")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitMasterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VasselETADate")
                        .HasColumnType("datetime2");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("useridUpdate")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("CommercialInvoiceId");

                    b.HasIndex("BBLCId");

                    b.HasIndex("CommercialCompanyID");

                    b.HasIndex("CommercialLCTypeId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DocumentStatusId");

                    b.HasIndex("ItemDescId");

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("MachinaryLCId");

                    b.HasIndex("SupplierID");

                    b.HasIndex("UnitMasterId");

                    b.ToTable("COM_CommercialInvoices");
                });

            modelBuilder.Entity("GTERP.Models.COM_CommercialInvoice_Sub", b =>
                {
                    b.Property<long>("CommercialInvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("COM_CommercialInvoicesCommercialInvoiceId")
                        .HasColumnType("bigint");

                    b.Property<int>("ItemDescId")
                        .HasColumnType("int");

                    b.HasKey("CommercialInvoiceId");

                    b.HasIndex("COM_CommercialInvoicesCommercialInvoiceId");

                    b.HasIndex("ItemDescId");

                    b.ToTable("COM_CommercialInvoice_Subs");
                });

            modelBuilder.Entity("GTERP.Models.COM_DocumentAcceptance_Details", b =>
                {
                    b.Property<long>("BillsOfExchangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("COM_DocumentAcceptance_MasterBillsOfExchangeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CommercialInvoiceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BillsOfExchangeId");

                    b.HasIndex("COM_DocumentAcceptance_MasterBillsOfExchangeId");

                    b.HasIndex("CommercialInvoiceId");

                    b.ToTable("COM_DocumentAcceptance_Details");
                });

            modelBuilder.Entity("GTERP.Models.COM_DocumentAcceptance_Master", b =>
                {
                    b.Property<long>("BillsOfExchangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BillsOfExchangeId")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AcceptedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ApprovedById")
                        .HasColumnType("int");

                    b.Property<int?>("BBLCId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BillDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BillMaturityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BillOfExchangeRef")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("BillPaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerInformationBuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ConversionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateApproval")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GroupLCId")
                        .HasColumnType("int");

                    b.Property<string>("MasterLCRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NewCIAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PaidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PayableAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalBBLCAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("BillsOfExchangeId");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("BBLCId");

                    b.HasIndex("BuyerInformationBuyerId");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("GroupLCId");

                    b.HasIndex("SupplierId");

                    b.ToTable("COM_DocumentAcceptance_Masters");
                });

            modelBuilder.Entity("GTERP.Models.COM_GroupLC_Main", b =>
                {
                    b.Property<int>("GroupLCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GroupLCId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FirstShipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupLCAmdNo")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(200);

                    b.Property<string>("GroupLCRefName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastShipDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalGroupLCQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalGroupLCValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalGroupLCValueManual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("useridUpdate")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("GroupLCId");

                    b.HasIndex("BuyerId");

                    b.HasIndex("CommercialCompanyId");

                    b.ToTable("COM_GroupLC_Mains");
                });

            modelBuilder.Entity("GTERP.Models.COM_GroupLC_Sub", b =>
                {
                    b.Property<int>("GroupLCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("COM_GroupLC_MainsGroupLCId")
                        .HasColumnType("int");

                    b.Property<int?>("COM_MasterLCMasterLCID")
                        .HasColumnType("int");

                    b.Property<int>("MasterLCID")
                        .HasColumnType("int");

                    b.HasKey("GroupLCId");

                    b.HasIndex("COM_GroupLC_MainsGroupLCId");

                    b.HasIndex("COM_MasterLCMasterLCID");

                    b.ToTable("COM_GroupLC_Subs");
                });

            modelBuilder.Entity("GTERP.Models.COM_MachinaryLC_Details", b =>
                {
                    b.Property<int>("MachinaryLCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("COM_MachinaryLC_MasterMachinaryLCId")
                        .HasColumnType("int");

                    b.Property<int?>("COM_ProformaInvoicePIId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("PIId")
                        .HasColumnType("int");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MachinaryLCId");

                    b.HasIndex("COM_MachinaryLC_MasterMachinaryLCId");

                    b.HasIndex("COM_ProformaInvoicePIId");

                    b.ToTable("COM_MachinaryLC_Detailss");
                });

            modelBuilder.Entity("GTERP.Models.COM_MachinaryLC_Master", b =>
                {
                    b.Property<int>("MachinaryLCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovalPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<decimal>("ConvertRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateApproval")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DayListId")
                        .HasColumnType("int");

                    b.Property<decimal>("DecreaseValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DestinationID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FirstShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GroupLCAverage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IncreaseValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Insurance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemGroupId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LcOpeningDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LienBankId")
                        .HasColumnType("int");

                    b.Property<string>("MachinaryLCNo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("MachinaryLCPrintDocDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MachinaryLCPrintDocRef")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(50);

                    b.Property<decimal>("MachinaryLCValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("OpeningBankId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentTerm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentTermsId")
                        .HasColumnType("int");

                    b.Property<int?>("PortOfDischargeId")
                        .HasColumnType("int");

                    b.Property<int>("PortOfLoadingId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShipModeId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Tenor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TradeTermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UDDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UDNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("useridUpdate")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("MachinaryLCId");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DayListId");

                    b.HasIndex("DestinationID");

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("LienBankId");

                    b.HasIndex("OpeningBankId");

                    b.HasIndex("PaymentTermsId");

                    b.HasIndex("PortOfDischargeId");

                    b.HasIndex("PortOfLoadingId");

                    b.HasIndex("ShipModeId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TradeTermId");

                    b.ToTable("COM_MachinaryLC_Masters");
                });

            modelBuilder.Entity("GTERP.Models.COM_MachineryLCDetails", b =>
                {
                    b.Property<int>("MachineryLCDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MachineryLCId")
                        .HasColumnType("int");

                    b.Property<int>("WorkOrderId")
                        .HasColumnType("int");

                    b.Property<string>("WorkOrderRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MachineryLCDetailId");

                    b.HasIndex("MachineryLCId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("COM_MachineryLCDetails");
                });

            modelBuilder.Entity("GTERP.Models.COM_MachineryLCMaster", b =>
                {
                    b.Property<int>("MachineryLCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BillMacturityDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BillPayDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DefferredPaymentDays")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ImportBillDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImportBillNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InsuranceCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("InsurancePayStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LCDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LCNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentTermsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalBillAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("MachineryLCId");

                    b.HasIndex("PaymentTermsId");

                    b.HasIndex("SupplierId");

                    b.ToTable("COM_MachineryLCMaster");
                });

            modelBuilder.Entity("GTERP.Models.COM_MasterLC", b =>
                {
                    b.Property<int>("MasterLCID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MasterLCID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BankAccountNosBankAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerGroupID")
                        .HasColumnType("int");

                    b.Property<int>("BuyerID")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerInformationsBuyerId")
                        .HasColumnType("int");

                    b.Property<string>("BuyerLCRef")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(100);

                    b.Property<int>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayListId")
                        .HasColumnType("int");

                    b.Property<string>("DestinationContract")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<string>("FileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FirstShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Insurance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LCExpirydate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LCNOforImport")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(200);

                    b.Property<int>("LCNatureId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LCOpenDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LCRefNo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(100);

                    b.Property<int>("LCStatusId")
                        .HasColumnType("int");

                    b.Property<int>("LCTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LCValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LienBankId")
                        .HasColumnType("int");

                    b.Property<decimal>("MasterLCValueManual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OpeningBankId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentTermsId")
                        .HasColumnType("int");

                    b.Property<int?>("PortOfDischargeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("PortOfLoadingId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemarksFive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemarksFour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemarksOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemarksThree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemarksTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SalesContractIssueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShipModeId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("Tenor")
                        .HasColumnType("int");

                    b.Property<decimal?>("Tolerance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalLCQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TradeTermId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("UnitMasterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("useridUpdate")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("MasterLCID");

                    b.HasIndex("BankAccountNosBankAccountId");

                    b.HasIndex("BuyerGroupID");

                    b.HasIndex("BuyerInformationsBuyerId");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DayListId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("LCNatureId");

                    b.HasIndex("LCStatusId");

                    b.HasIndex("LCTypeId");

                    b.HasIndex("LienBankId");

                    b.HasIndex("OpeningBankId");

                    b.HasIndex("PaymentTermsId");

                    b.HasIndex("PortOfDischargeId");

                    b.HasIndex("PortOfLoadingId");

                    b.HasIndex("ShipModeId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TradeTermId");

                    b.HasIndex("UnitMasterId");

                    b.ToTable("COM_MasterLCs");
                });

            modelBuilder.Entity("GTERP.Models.COM_MasterLCExport", b =>
                {
                    b.Property<int>("MasterLCID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("COM_MasterLCMasterLCID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExportOrderID")
                        .HasColumnType("int");

                    b.Property<string>("ExportOrderStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExportPONo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterLCID");

                    b.HasIndex("COM_MasterLCMasterLCID");

                    b.HasIndex("ExportOrderID");

                    b.ToTable("COM_MasterLCExports");
                });

            modelBuilder.Entity("GTERP.Models.COM_MasterLC_Details", b =>
                {
                    b.Property<int>("MasterLCDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContractNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationPO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExportPONo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fabrication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Factor")
                        .HasColumnType("real");

                    b.Property<string>("HSCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kimball")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MasterLCID")
                        .HasColumnType("int");

                    b.Property<float>("OrderQty")
                        .HasColumnType("real");

                    b.Property<string>("OrderType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("QtyInPcs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SL")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StyleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitMasterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("useridUpdate")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("MasterLCDetailsID");

                    b.HasIndex("MasterLCID");

                    b.HasIndex("UnitMasterId");

                    b.ToTable("COM_MasterLC_Detailss");
                });

            modelBuilder.Entity("GTERP.Models.COM_ProformaInvoice", b =>
                {
                    b.Property<int>("PIId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BankAccountNoLienBanksLienBankAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BankAccountNosBankAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("COM_GroupLC_MainsGroupLCId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CartonRollQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DayListId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FileNo")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(50);

                    b.Property<int?>("GroupLCId")
                        .HasColumnType("int");

                    b.Property<string>("HSCode")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(50);

                    b.Property<string>("ImportPONo")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(500);

                    b.Property<decimal?>("ImportQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ImportRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ItemDescId")
                        .HasColumnType("int");

                    b.Property<string>("ItemDescList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(500);

                    b.Property<int?>("ItemGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ItemGroupName")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(500);

                    b.Property<string>("LCAF")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(500);

                    b.Property<int?>("LienBankAccountId")
                        .HasColumnType("int");

                    b.Property<string>("MerchandiserName")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(300);

                    b.Property<int?>("OpeningBankId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PIDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PINo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("PIReceivingDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PaymentTermsId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(500);

                    b.Property<string>("RevNo")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(300);

                    b.Property<string>("Size")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(40);

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitMasterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("useridUpdate")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("PIId");

                    b.HasIndex("BankAccountNoLienBanksLienBankAccountId");

                    b.HasIndex("BankAccountNosBankAccountId");

                    b.HasIndex("COM_GroupLC_MainsGroupLCId");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DayListId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ItemDescId");

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("OpeningBankId");

                    b.HasIndex("PaymentTermsId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UnitMasterId");

                    b.ToTable("COM_ProformaInvoices");
                });

            modelBuilder.Entity("GTERP.Models.COM_ProformaInvoice_Sub", b =>
                {
                    b.Property<int>("PIId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Com_proformaInvoicesPIId")
                        .HasColumnType("int");

                    b.Property<int>("ItemDescId")
                        .HasColumnType("int");

                    b.HasKey("PIId");

                    b.HasIndex("Com_proformaInvoicesPIId");

                    b.HasIndex("ItemDescId");

                    b.ToTable("COM_ProformaInvoice_Subs");
                });

            modelBuilder.Entity("GTERP.Models.Cat_AccountType", b =>
                {
                    b.Property<int>("AccTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccTypeName")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("AccTypeId");

                    b.ToTable("Cat_AccountType");
                });

            modelBuilder.Entity("GTERP.Models.Cat_AttStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("AttStatusDetails")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("StatusId");

                    b.ToTable("Cat_AttStatus");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Bank", b =>
                {
                    b.Property<int>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankAddress")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BankShortName")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("BankId");

                    b.ToTable("Cat_Bank");
                });

            modelBuilder.Entity("GTERP.Models.Cat_BankBranch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BranchAddress")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("BranchId");

                    b.ToTable("Cat_BankBranch");
                });

            modelBuilder.Entity("GTERP.Models.Cat_BloodGroup", b =>
                {
                    b.Property<int>("BloodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BloodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("BloodId");

                    b.ToTable("Cat_BloodGroup");
                });

            modelBuilder.Entity("GTERP.Models.Cat_BuildingType", b =>
                {
                    b.Property<int>("BId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuildingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("BuildingNameB")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("BuildingShortName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("BId");

                    b.ToTable("Cat_BuildingType");
                });

            modelBuilder.Entity("GTERP.Models.Cat_BusStop", b =>
                {
                    b.Property<int>("BusStopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusStopName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Rate")
                        .HasColumnType("real");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BusStopId");

                    b.ToTable("Cat_BusStop");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Catagory", b =>
                {
                    b.Property<int>("CatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CatName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int>("SlNo")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CatId");

                    b.ToTable("Cat_Catagory");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Department", b =>
                {
                    b.Property<int>("DeptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeptBangla")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("DeptCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Slno")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("DeptId");

                    b.ToTable("Cat_Department");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Designation", b =>
                {
                    b.Property<int>("DesigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AttBonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DesigName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("DesigNameB")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GradeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Gsmin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SlNo")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DesigId");

                    b.HasIndex("GradeId");

                    b.ToTable("Cat_Designation");
                });

            modelBuilder.Entity("GTERP.Models.Cat_District", b =>
                {
                    b.Property<int>("DistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DistName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("DistNameB")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("DistNameShort")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DistId");

                    b.ToTable("Cat_District");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Emp_Type", b =>
                {
                    b.Property<int>("EmpTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("EmpTypeName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("EmpTypeNameB")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("EmpTypeId");

                    b.ToTable("Cat_Emp_Type");
                });

            modelBuilder.Entity("GTERP.Models.Cat_ExchangeRate", b =>
                {
                    b.Property<int>("ExChangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<float>("ExchangeRate")
                        .HasColumnType("real");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExChangeId");

                    b.ToTable("Cat_ExchangeRate");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Floor", b =>
                {
                    b.Property<int>("FloorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<string>("FloorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("FloorNameB")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("FloorId");

                    b.ToTable("Cat_Floor");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("GenderName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("GenderNameB")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("GenderId");

                    b.ToTable("Cat_Gender");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("GradeNameB")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<double?>("MinGS")
                        .HasColumnType("float");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradeId");

                    b.ToTable("Cat_Grade");
                });

            modelBuilder.Entity("GTERP.Models.Cat_IncenBand", b =>
                {
                    b.Property<int>("InBId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("IncenBandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int>("SlNo")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InBId");

                    b.ToTable("Cat_IncenBand");
                });

            modelBuilder.Entity("GTERP.Models.Cat_InsurGrade", b =>
                {
                    b.Property<int>("InGId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("InSurGrade")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int>("SlNo")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InGId");

                    b.ToTable("Cat_InsurGrade");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Leave_Type", b =>
                {
                    b.Property<int>("LTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<float?>("LDays")
                        .HasColumnType("real");

                    b.Property<string>("LTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("LTypeNameShort")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.HasKey("LTypeId");

                    b.ToTable("Cat_Leave_Type");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Line", b =>
                {
                    b.Property<int>("LineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<string>("LineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("LineNameB")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("LineId");

                    b.ToTable("Cat_Line");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Location", b =>
                {
                    b.Property<int>("LId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("LocationNameB")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("LId");

                    b.ToTable("Cat_Location");
                });

            modelBuilder.Entity("GTERP.Models.Cat_PayMode", b =>
                {
                    b.Property<int>("PayModeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PayModeName")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("PayModeId");

                    b.ToTable("Cat_PayMode");
                });

            modelBuilder.Entity("GTERP.Models.Cat_PoliceStation", b =>
                {
                    b.Property<int>("PStationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<string>("PStationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PStationNameB")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("PStationId");

                    b.HasIndex("DistId");

                    b.ToTable("Cat_PoliceStation");
                });

            modelBuilder.Entity("GTERP.Models.Cat_PostOffice", b =>
                {
                    b.Property<int>("POId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<string>("POCode")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("POName")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("PONameB")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("POId");

                    b.HasIndex("DistId");

                    b.ToTable("Cat_PostOffice");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Religion", b =>
                {
                    b.Property<int>("RelgionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReligionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ReligionNameB")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("RelgionId");

                    b.ToTable("Cat_Religion");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Section", b =>
                {
                    b.Property<int>("SectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeptId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("SectNameB")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int>("Slno")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("SectId");

                    b.HasIndex("DeptId");

                    b.ToTable("Cat_Section");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Shift", b =>
                {
                    b.Property<int>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LunchIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LunchOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LunchTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegHour")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftCat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftCode")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("ShiftDesc")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("ShiftIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShiftLate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<DateTime>("ShiftOut")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TiffinIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TiffinOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TiffinTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TiffinTime1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TiffinTime2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TiffinTimeIn1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TiffinTimeIn2")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("ShiftId");

                    b.ToTable("Cat_Shift");
                });

            modelBuilder.Entity("GTERP.Models.Cat_SubSection", b =>
                {
                    b.Property<int>("SubSectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectId")
                        .HasColumnType("int");

                    b.Property<short>("Slno")
                        .HasColumnType("smallint");

                    b.Property<string>("SubSectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("SubSectNameB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubSectId");

                    b.HasIndex("DeptId");

                    b.HasIndex("SectId");

                    b.ToTable("Cat_SubSection");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Unit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("UnitNameB")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("UnitShortName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("UnitId");

                    b.ToTable("Cat_Unit");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Variable", b =>
                {
                    b.Property<int>("VarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("VarName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("VarType")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("VarId");

                    b.ToTable("Cat_Variable");
                });

            modelBuilder.Entity("GTERP.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("CategoryFileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("CategoryImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CategoryImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("GTERP.Models.ChartOfAccount", b =>
                {
                    b.Property<int>("AccId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("AccName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AccType")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<int>("CountryIdLocal")
                        .HasColumnType("int");

                    b.Property<int>("IsChkRef")
                        .HasColumnType("int");

                    b.Property<int>("IsEntryBankLiability")
                        .HasColumnType("int");

                    b.Property<int>("IsEntryDep")
                        .HasColumnType("int");

                    b.Property<int>("IsItemBS")
                        .HasColumnType("int");

                    b.Property<int>("IsItemCS")
                        .HasColumnType("int");

                    b.Property<int>("IsItemPL")
                        .HasColumnType("int");

                    b.Property<int>("IsItemTA")
                        .HasColumnType("int");

                    b.Property<int>("IsShowCOA")
                        .HasColumnType("int");

                    b.Property<int>("IsSysDefined")
                        .HasColumnType("int");

                    b.Property<decimal>("OpCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OpCreditLocal")
                        .HasColumnType("int");

                    b.Property<DateTime>("OpDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OpDebit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OpDebitLocal")
                        .HasColumnType("int");

                    b.Property<string>("ParentCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int>("RelatedId")
                        .HasColumnType("int");

                    b.Property<int>("isInactive")
                        .HasColumnType("int");

                    b.Property<int>("isItemConsumed")
                        .HasColumnType("int");

                    b.Property<int>("isShowUg")
                        .HasColumnType("int");

                    b.Property<int>("opFYId")
                        .HasColumnType("int");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("AccId");

                    b.HasIndex("ParentID");

                    b.ToTable("ChartOfAccount");
                });

            modelBuilder.Entity("GTERP.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.HasIndex("StateId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("GTERP.Models.CommercialCompany", b =>
                {
                    b.Property<int>("CommercialCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BKMEARegNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IRCNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TINNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TradeLicenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VATNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Web")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("CommercialCompanyId");

                    b.ToTable("CommercialCompany");
                });

            modelBuilder.Entity("GTERP.Models.CommercialLCType", b =>
                {
                    b.Property<int>("CommercialLCTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommercialLCTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CommercialLCTypeShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("CommercialLCTypeId");

                    b.ToTable("CommercialLCTypes");
                });

            modelBuilder.Entity("GTERP.Models.Company", b =>
                {
                    b.Property<int>("ComId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addvertise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BaseComId")
                        .HasColumnType("int");

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<byte[]>("ComImageHeader")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ComLogo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("CompanyShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ContDesig")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ContPerson")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("DecimalField")
                        .HasColumnType("int");

                    b.Property<string>("HeaderFileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsService")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowCurrencySymbol")
                        .HasColumnType("bit");

                    b.Property<string>("LogoFileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("SecoundaryAddress")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("comEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("comFax")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("comPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("comPhone2")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("comWeb")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<bool>("isBarcode")
                        .HasColumnType("bit");

                    b.Property<bool>("isCorporate")
                        .HasColumnType("bit");

                    b.Property<bool>("isIMEISale")
                        .HasColumnType("bit");

                    b.Property<bool>("isMultipleWh")
                        .HasColumnType("bit");

                    b.Property<bool>("isOldDue")
                        .HasColumnType("bit");

                    b.Property<bool>("isPOSprint")
                        .HasColumnType("bit");

                    b.Property<bool>("isProduct")
                        .HasColumnType("bit");

                    b.Property<bool>("isRestaurantSale")
                        .HasColumnType("bit");

                    b.Property<bool>("isShoeSale")
                        .HasColumnType("bit");

                    b.Property<bool>("isShortcutSale")
                        .HasColumnType("bit");

                    b.Property<bool>("isTouch")
                        .HasColumnType("bit");

                    b.HasKey("ComId");

                    b.HasIndex("BusinessTypeId");

                    b.HasIndex("CountryId");

                    b.ToTable("Companys");
                });

            modelBuilder.Entity("GTERP.Models.CompanyPermission", b =>
                {
                    b.Property<int>("CompanyPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("isChecked")
                        .HasColumnType("int");

                    b.Property<int>("isDefault")
                        .HasColumnType("int");

                    b.Property<int?>("vCompanyComId")
                        .HasColumnType("int");

                    b.HasKey("CompanyPermissionId");

                    b.HasIndex("vCompanyComId");

                    b.ToTable("CompanyPermissions");
                });

            modelBuilder.Entity("GTERP.Models.Consignee", b =>
                {
                    b.Property<int>("ConsigneeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsigneeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("ConsigneeId");

                    b.HasIndex("CountryId");

                    b.ToTable("Consignees");
                });

            modelBuilder.Entity("GTERP.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CountryShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("CultureInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CurrencyShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CurrencySymbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DialCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("FlagClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("GTERP.Models.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EffectDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("GTERP.Models.CurrencyTransaction", b =>
                {
                    b.Property<int>("CurrencyTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountForeign")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountLocalBuy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountLocalSale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int>("CountryIdForeign")
                        .HasColumnType("int");

                    b.Property<int>("CountryIdLocal")
                        .HasColumnType("int");

                    b.Property<bool>("isAutoEntry")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("tranDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("CurrencyTransactionId");

                    b.ToTable("CurrencyTransactions");
                });

            modelBuilder.Entity("GTERP.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("OpBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("PrimaryAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("SecoundaryAddress")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.HasIndex("CountryId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("GTERP.Models.CustomerContact", b =>
                {
                    b.Property<int>("CustomerContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactEmailNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerContactId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerContacts");
                });

            modelBuilder.Entity("GTERP.Models.CustomerPayment", b =>
                {
                    b.Property<int>("CustomerPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ActiveFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ActiveToDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ActiveYesNo")
                        .HasColumnType("bit");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPaymentNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoftwarePackageId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(3000)")
                        .HasMaxLength(300);

                    b.Property<string>("TrxID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsageDuration")
                        .HasColumnType("int");

                    b.Property<string>("UserPhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("merchantInvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("transactionStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userid")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("CustomerPaymentId");

                    b.ToTable("CustomerPayments");
                });

            modelBuilder.Entity("GTERP.Models.CustomerSerial", b =>
                {
                    b.Property<int>("CustomerSerialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerSerialAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("CustomerSerialMobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("CustomerSerialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CustomerSerialNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(3000)")
                        .HasMaxLength(300);

                    b.Property<string>("UserPhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userid")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("CustomerSerialId");

                    b.ToTable("CustomerSerials");
                });

            modelBuilder.Entity("GTERP.Models.DayList", b =>
                {
                    b.Property<int>("DayListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DayListGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DayListName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DayListShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("DayListId");

                    b.ToTable("DayLists");
                });

            modelBuilder.Entity("GTERP.Models.Destination", b =>
                {
                    b.Property<int>("DestinationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(200);

                    b.Property<string>("DestinationNameSearch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DestinationID");

                    b.HasIndex("CountryId");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("GTERP.Models.DocumentStatus", b =>
                {
                    b.Property<int>("DocumentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DocumentStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DocumentStatusShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("DocumentStatusId");

                    b.ToTable("DocumentStatuss");
                });

            modelBuilder.Entity("GTERP.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BaseEmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("Cat_SubSectionSubSectId")
                        .HasColumnType("int");

                    b.Property<int>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("EmployeeImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubSectId")
                        .HasColumnType("int");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("BaseEmployeeId");

                    b.HasIndex("Cat_SubSectionSubSectId");

                    b.HasIndex("CommercialCompanyId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("GTERP.Models.ErrorLog", b =>
                {
                    b.Property<int>("ErrorLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommandType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ErrorLogId");

                    b.ToTable("ErrorLogs");
                });

            modelBuilder.Entity("GTERP.Models.ExportInvoiceDetails", b =>
                {
                    b.Property<int>("ExportInvoiceDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BillReceiveDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("BoxHeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BoxLength")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BoxWidth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CBMLine")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("COM_MasterLC_DetailMasterLCDetailsID")
                        .HasColumnType("int");

                    b.Property<int?>("CartonQty")
                        .HasColumnType("int");

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DocumentSendDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExportInvoiceMastersInvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("ExportPoNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("GrossWeightLine")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("InvoiceFactor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<decimal?>("InvoiceQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("InvoiceQtyInPcs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("InvoiceRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("InvoiceValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LCQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MasterLCDetailsID")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetWeightLine")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PODate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SLNO")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StyleNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitMasterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExportInvoiceDetailsId");

                    b.HasIndex("COM_MasterLC_DetailMasterLCDetailsID");

                    b.HasIndex("ExportInvoiceMastersInvoiceId");

                    b.HasIndex("UnitMasterId");

                    b.ToTable("ExportInvoiceDetailss");
                });

            modelBuilder.Entity("GTERP.Models.ExportInvoiceMaster", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("BLDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BLNo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("BalanceShip")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankAccNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BankAccountNosBankAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BookingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuyerGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerInformationBuyerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CBM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CMPPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CMPValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("COM_MasterLCMasterLCID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CargoHandoverDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CartonMeasurement")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryTerm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DestinationId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ExfactoryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpNo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long?>("FirstNotifyPartyId")
                        .HasColumnType("bigint");

                    b.Property<string>("GoodsDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<decimal?>("GrossWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(100);

                    b.Property<string>("MainMark")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("ManufactureId")
                        .HasColumnType("int");

                    b.Property<int?>("MasterLCId")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NetWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("OnboardDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OpeningBankId")
                        .HasColumnType("int");

                    b.Property<string>("PackingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentTermsManual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PortOfDischargeId")
                        .HasColumnType("int");

                    b.Property<int?>("PortOfLoadingId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<long?>("SecoundNotifyPartyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Session")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShipModeId")
                        .HasColumnType("int");

                    b.Property<string>("ShipmentAuthorization")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<long?>("ThirdNotifyPartyId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("TotalCartonQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalInvoiceQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalInvoiceQtyPcs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalShipped")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TradeTermId")
                        .HasColumnType("int");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VesselName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("VoyageNo")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("useridUpdate")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("InvoiceId");

                    b.HasIndex("BankAccountNosBankAccountId");

                    b.HasIndex("BuyerGroupId");

                    b.HasIndex("BuyerInformationBuyerId");

                    b.HasIndex("COM_MasterLCMasterLCID");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("FirstNotifyPartyId");

                    b.HasIndex("ManufactureId");

                    b.HasIndex("OpeningBankId");

                    b.HasIndex("PortOfDischargeId");

                    b.HasIndex("PortOfLoadingId");

                    b.HasIndex("SecoundNotifyPartyId");

                    b.HasIndex("ShipModeId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("ThirdNotifyPartyId");

                    b.HasIndex("TradeTermId");

                    b.ToTable("ExportInvoiceMasters");
                });

            modelBuilder.Entity("GTERP.Models.ExportInvoicePackingList", b =>
                {
                    b.Property<int>("ExportInvoicePackingListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BoxHeightLinePacking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BoxLengthLinePacking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BoxWidthLinePacking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CBMLinePacking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CartonQty")
                        .HasColumnType("int");

                    b.Property<int>("ExportInvoiceDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("ExportPoNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("GrossWeightLinePacking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ItemNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NetWeightLinePacking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SLNOLinePacking")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UPCNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ExportInvoicePackingListId");

                    b.HasIndex("ExportInvoiceDetailsId");

                    b.ToTable("ExportInvoicePackingLists");
                });

            modelBuilder.Entity("GTERP.Models.ExportOrder", b =>
                {
                    b.Property<int>("ExportOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuyerContactPONo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DestinationID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExFactoryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExportOrderCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ExportOrderStatusId")
                        .HasColumnType("int");

                    b.Property<decimal>("OrderQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OrderValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("POLineNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PoDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ShipModeId")
                        .HasColumnType("int");

                    b.Property<int>("StyleID")
                        .HasColumnType("int");

                    b.Property<int?>("StyleInformationStyleId")
                        .HasColumnType("int");

                    b.Property<string>("UnitMasterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("ExportOrderID");

                    b.HasIndex("DestinationID");

                    b.HasIndex("ExportOrderCategoryId");

                    b.HasIndex("ExportOrderStatusId");

                    b.HasIndex("ShipModeId");

                    b.HasIndex("StyleInformationStyleId");

                    b.HasIndex("UnitMasterId");

                    b.ToTable("ExportOrders");
                });

            modelBuilder.Entity("GTERP.Models.ExportOrderCategory", b =>
                {
                    b.Property<int>("ExportOrderCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExportOrderCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ExportOrderCategoryShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("ExportOrderCategoryId");

                    b.ToTable("ExportOrderCategorys");
                });

            modelBuilder.Entity("GTERP.Models.ExportOrderStatus", b =>
                {
                    b.Property<int>("ExportOrderStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExportOrderStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ExportOrderStatusShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("ExportOrderStatusId");

                    b.ToTable("ExportOrderStatus");
                });

            modelBuilder.Entity("GTERP.Models.ExportRealizationBankInfo", b =>
                {
                    b.Property<int>("BankRefId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("BBLCMarginAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("BankRefDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BankRefNo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(200);

                    b.Property<int?>("BuyerGroupId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CMAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CourierDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CourierNo")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(200);

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileNo")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(500);

                    b.Property<decimal?>("OtherBankCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("RealizationAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("RealizationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(500);

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("useridUpdate")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("BankRefId");

                    b.HasIndex("BuyerGroupId");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("ExportRealizationBankInfo");
                });

            modelBuilder.Entity("GTERP.Models.ExportRealizationDetails", b =>
                {
                    b.Property<int>("RealizationDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExportRealizationMasterRealizationId")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int?>("RealizationId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RealizationDetailsId");

                    b.HasIndex("ExportRealizationMasterRealizationId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("ExportRealizationDetailss");
                });

            modelBuilder.Entity("GTERP.Models.ExportRealizationMaster", b =>
                {
                    b.Property<int>("RealizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerInformationBuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("COM_MasterLCMasterLCID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MasterLCId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PendingValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("RealizationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RealizationNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RealizedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("TotalExportInvoice")
                        .HasColumnType("int");

                    b.Property<int?>("TotalOrderQty")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("RealizationId");

                    b.HasIndex("BuyerInformationBuyerId");

                    b.HasIndex("COM_MasterLCMasterLCID");

                    b.HasIndex("SupplierId");

                    b.ToTable("ExportRealizationMasters");
                });

            modelBuilder.Entity("GTERP.Models.ExportRealization_Details", b =>
                {
                    b.Property<int>("ExportRealizationDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BankCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExportInvoiceMasterInvoiceId")
                        .HasColumnType("int");

                    b.Property<int?>("ExportRealization_MastersRealizationId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("RealizationId")
                        .HasColumnType("int");

                    b.Property<decimal>("ReceivingValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExportRealizationDetailsId");

                    b.HasIndex("ExportInvoiceMasterInvoiceId");

                    b.HasIndex("ExportRealization_MastersRealizationId");

                    b.ToTable("ExportRealization_Detailss");
                });

            modelBuilder.Entity("GTERP.Models.ExportRealization_Master", b =>
                {
                    b.Property<int>("RealizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("BankCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankRef")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(100);

                    b.Property<int?>("COM_MasterLCMasterLCID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CourierDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CourierNo")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExportFormNo")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("FBPDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FBPNo")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(100);

                    b.Property<string>("FileNumber")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(100);

                    b.Property<int>("MasterLCID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RealizationAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("RealizationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ReceivingVlaue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(100);

                    b.Property<decimal>("TotalInvoiceQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("useridUpdate")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("RealizationId");

                    b.HasIndex("COM_MasterLCMasterLCID");

                    b.ToTable("ExportRealization_Masters");
                });

            modelBuilder.Entity("GTERP.Models.FileDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("DBFile")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupportId");

                    b.ToTable("FileDetails");
                });

            modelBuilder.Entity("GTERP.Models.FiscalHalfYear", b =>
                {
                    b.Property<int>("FiscalHalfYearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int>("FYId")
                        .HasColumnType("int");

                    b.Property<int>("HYearId")
                        .HasColumnType("int");

                    b.Property<string>("HyearName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("aid")
                        .HasColumnType("int");

                    b.Property<string>("dtFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtTo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FiscalHalfYearId");

                    b.ToTable("FiscalHalfYears");
                });

            modelBuilder.Entity("GTERP.Models.FiscalMonth", b =>
                {
                    b.Property<int>("FiscalMonthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int>("FYId")
                        .HasColumnType("int");

                    b.Property<int>("HYearId")
                        .HasColumnType("int");

                    b.Property<string>("MonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MonthId")
                        .HasColumnType("int");

                    b.Property<int>("QtrId")
                        .HasColumnType("int");

                    b.Property<int>("aid")
                        .HasColumnType("int");

                    b.Property<string>("dtFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtTo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FiscalMonthId");

                    b.ToTable("FiscalMonths");
                });

            modelBuilder.Entity("GTERP.Models.FiscalQtr", b =>
                {
                    b.Property<int>("FiscalQtrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int>("FYId")
                        .HasColumnType("int");

                    b.Property<int>("HYearId")
                        .HasColumnType("int");

                    b.Property<int>("QtrId")
                        .HasColumnType("int");

                    b.Property<string>("QtrName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("aid")
                        .HasColumnType("int");

                    b.Property<string>("dtFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtTo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FiscalQtrId");

                    b.ToTable("FiscalQtrs");
                });

            modelBuilder.Entity("GTERP.Models.FiscalYear", b =>
                {
                    b.Property<int>("FiscalYearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int>("FYId")
                        .HasColumnType("int");

                    b.Property<string>("FYName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<int>("isRunning")
                        .HasColumnType("int");

                    b.Property<int>("isWorking")
                        .HasColumnType("int");

                    b.HasKey("FiscalYearId");

                    b.ToTable("FiscalYears");
                });

            modelBuilder.Entity("GTERP.Models.HR_AttFixed", b =>
                {
                    b.Property<int>("AttId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime>("DtPunchDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<float>("OTHour")
                        .HasColumnType("real");

                    b.Property<float>("OTHourPrev")
                        .HasColumnType("real");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("StatusPrev")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeInPrev")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeOutPrev")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("AttId");

                    b.HasIndex("EmpId");

                    b.HasIndex("ShiftId");

                    b.HasIndex("StatusId");

                    b.ToTable("HR_AttFixed");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Address", b =>
                {
                    b.Property<int>("EmpAddId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpCurrCityVill")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("EmpCurrDistId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpCurrPOId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpCurrPSId")
                        .HasColumnType("int");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EmpPerCityVill")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("EmpPerDistId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpPerPOId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpPerPSId")
                        .HasColumnType("int");

                    b.Property<string>("EmpRemarksCurr")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("EmpRemarksPer")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("EmpAddId");

                    b.HasIndex("EmpCurrDistId");

                    b.HasIndex("EmpCurrPOId");

                    b.HasIndex("EmpCurrPSId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.HasIndex("EmpPerDistId");

                    b.HasIndex("EmpPerPOId");

                    b.HasIndex("EmpPerPSId");

                    b.ToTable("HR_Emp_Address");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_BankInfo", b =>
                {
                    b.Property<int>("BankInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccTypeId")
                        .HasColumnType("int");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int?>("BankId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<int?>("PayModeId")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("RoutingNumber")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("BankInfoId");

                    b.HasIndex("AccTypeId");

                    b.HasIndex("BankId");

                    b.HasIndex("BranchId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.HasIndex("PayModeId");

                    b.ToTable("HR_Emp_BankInfo");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Education", b =>
                {
                    b.Property<int>("EmpEduId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BoardName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("ExamName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ExamResult")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("InstituteName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("MajorSub")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PassingYear")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("EmpEduId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_Emp_Education");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Experience", b =>
                {
                    b.Property<int>("EmpExpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtFromJob")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtToJob")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("ExpYear")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PrevCompany")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PrevDesignation")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PrevSalary")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpExpId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_Emp_Experience");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Family", b =>
                {
                    b.Property<int>("EmpFamilyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpChildBirthCer1")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("EmpChildBirthCer2")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("EmpChildBirthCer3")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("EmpChildBirthCer4")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<DateTime?>("EmpChildDOB1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EmpChildDOB2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EmpChildDOB3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EmpChildDOB4")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpChildEdu1")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("EmpChildEdu2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("EmpChildEdu3")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("EmpChildEdu4")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("EmpChildName1")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("EmpChildName2")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("EmpChildName3")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("EmpChildName4")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("EmpFather")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("EmpFatherMobile")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("EmpFatherNID")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EmpMother")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("EmpMotherMobile")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("EmpMotherNID")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("EmpSpouse")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("EmpSpouseMobile")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("EmpSpouseNID")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("EmpFamilyId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.ToTable("HR_Emp_Family");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Image", b =>
                {
                    b.Property<int>("EmpImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<byte[]>("EmpImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("EmpImageExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("EmpImageId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.ToTable("HR_Emp_Image");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Increment", b =>
                {
                    b.Property<int>("IncId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtIncrement")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("IncTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("NewBS")
                        .HasColumnType("float");

                    b.Property<double?>("NewDA")
                        .HasColumnType("float");

                    b.Property<int?>("NewDeptId")
                        .HasColumnType("int");

                    b.Property<int?>("NewDesigId")
                        .HasColumnType("int");

                    b.Property<int?>("NewEmpTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("NewFA")
                        .HasColumnType("float");

                    b.Property<int?>("NewGenderId")
                        .HasColumnType("int");

                    b.Property<double?>("NewHR")
                        .HasColumnType("float");

                    b.Property<double?>("NewMA")
                        .HasColumnType("float");

                    b.Property<double?>("NewPA")
                        .HasColumnType("float");

                    b.Property<double?>("NewSalary")
                        .HasColumnType("float");

                    b.Property<int?>("NewSectId")
                        .HasColumnType("int");

                    b.Property<double?>("NewTA")
                        .HasColumnType("float");

                    b.Property<int?>("NewUnitId")
                        .HasColumnType("int");

                    b.Property<double?>("OldBS")
                        .HasColumnType("float");

                    b.Property<double?>("OldDA")
                        .HasColumnType("float");

                    b.Property<int?>("OldDeptId")
                        .HasColumnType("int");

                    b.Property<int?>("OldDesigId")
                        .HasColumnType("int");

                    b.Property<int?>("OldEmpTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("OldFA")
                        .HasColumnType("float");

                    b.Property<int?>("OldGenderId")
                        .HasColumnType("int");

                    b.Property<double?>("OldHR")
                        .HasColumnType("float");

                    b.Property<double?>("OldMA")
                        .HasColumnType("float");

                    b.Property<double?>("OldPA")
                        .HasColumnType("float");

                    b.Property<double?>("OldSalary")
                        .HasColumnType("float");

                    b.Property<int?>("OldSectId")
                        .HasColumnType("int");

                    b.Property<double?>("OldTA")
                        .HasColumnType("float");

                    b.Property<int?>("OldUnitId")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<float?>("Percentage")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("IncId");

                    b.HasIndex("EmpId")
                        .IsUnique()
                        .HasFilter("[EmpId] IS NOT NULL");

                    b.HasIndex("IncTypeId");

                    b.HasIndex("NewDeptId");

                    b.HasIndex("NewDesigId");

                    b.HasIndex("NewEmpTypeId");

                    b.HasIndex("NewGenderId");

                    b.HasIndex("NewSectId");

                    b.HasIndex("NewUnitId");

                    b.HasIndex("OldDeptId");

                    b.HasIndex("OldDesigId");

                    b.HasIndex("OldEmpTypeId");

                    b.HasIndex("OldGenderId");

                    b.HasIndex("OldSectId");

                    b.HasIndex("OldUnitId");

                    b.ToTable("HR_Emp_Increment");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Info", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BloodId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<int>("DesigId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DtBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtConfirm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtIncrement")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtJoin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtLocalJoin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtPf")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpEmail")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpPerZip")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpPhone1")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("EmpPhone2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("EmpRemarks")
                        .HasColumnType("nvarchar(120)")
                        .HasMaxLength(120);

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<string>("FingerId")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("FloorId")
                        .HasColumnType("int");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<int?>("GradeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAllowOT")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<int?>("LineId")
                        .HasColumnType("int");

                    b.Property<int>("ManageType")
                        .HasColumnType("int");

                    b.Property<string>("NID")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<int>("RelgionId")
                        .HasColumnType("int");

                    b.Property<int>("SectId")
                        .HasColumnType("int");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("SubSectId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("EmpId");

                    b.HasIndex("BloodId");

                    b.HasIndex("DeptId");

                    b.HasIndex("DesigId");

                    b.HasIndex("EmpTypeId");

                    b.HasIndex("FloorId");

                    b.HasIndex("GenderId");

                    b.HasIndex("GradeId");

                    b.HasIndex("LineId");

                    b.HasIndex("RelgionId");

                    b.HasIndex("SectId");

                    b.HasIndex("ShiftId");

                    b.HasIndex("SubSectId");

                    b.HasIndex("UnitId");

                    b.ToTable("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Nominee", b =>
                {
                    b.Property<int>("EmpNomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EmpNomineeAddress1")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("EmpNomineeAddress2")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("EmpNomineeDOB1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EmpNomineeDOB2")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpNomineeJobType1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpNomineeJobType2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpNomineeMobile1")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("EmpNomineeMobile2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("EmpNomineeNID1")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("EmpNomineeNID2")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("EmpNomineeName1")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("EmpNomineeName2")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("EmpNomineePercentage1")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("EmpNomineePercentage2")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("EmpNomineeRelation1")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("EmpNomineeRelation2")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpNomId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.ToTable("HR_Emp_Nominee");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_PersonalInfo", b =>
                {
                    b.Property<int>("EmpPersInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BId")
                        .HasColumnType("int");

                    b.Property<string>("BirthCertificate")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Caste")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ChildNo")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<float?>("Height")
                        .HasColumnType("real");

                    b.Property<string>("IdentificationSign")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<bool>("IsUsingHouse")
                        .HasColumnType("bit");

                    b.Property<bool>("MaritalStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("PassportNo")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("TINNo")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.HasKey("EmpPersInfoId");

                    b.HasIndex("BId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.ToTable("HR_Emp_PersonalInfo");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Released", b =>
                {
                    b.Property<int>("RelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtPresentLast")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtReleased")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtSubmit")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("RelType")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("RelId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_Emp_Released");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Salary", b =>
                {
                    b.Property<int>("SalaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("AdvAgainstExp")
                        .HasColumnType("real");

                    b.Property<float?>("AdvFacility")
                        .HasColumnType("real");

                    b.Property<float?>("AdvInTaxDed")
                        .HasColumnType("real");

                    b.Property<float?>("AdvWagesDed")
                        .HasColumnType("real");

                    b.Property<float?>("ArrearBasic")
                        .HasColumnType("real");

                    b.Property<float?>("ArrearBonus")
                        .HasColumnType("real");

                    b.Property<float?>("ArrearInTaxDed")
                        .HasColumnType("real");

                    b.Property<float?>("AttAllow")
                        .HasColumnType("real");

                    b.Property<int?>("BId")
                        .HasColumnType("int");

                    b.Property<float>("BasicSalary")
                        .HasColumnType("real");

                    b.Property<float?>("CanteenAllow")
                        .HasColumnType("real");

                    b.Property<float?>("ChargeAllow")
                        .HasColumnType("real");

                    b.Property<float?>("CheForum")
                        .HasColumnType("real");

                    b.Property<float?>("ChemicalAsso")
                        .HasColumnType("real");

                    b.Property<float?>("ChemicalForum")
                        .HasColumnType("real");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<float?>("ComPfCount")
                        .HasColumnType("real");

                    b.Property<float?>("ContainSub")
                        .HasColumnType("real");

                    b.Property<float?>("ConvAllowDed")
                        .HasColumnType("real");

                    b.Property<float?>("ConveyanceAllow")
                        .HasColumnType("real");

                    b.Property<float?>("DapEmpClub")
                        .HasColumnType("real");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<float?>("DearnessAllow")
                        .HasColumnType("real");

                    b.Property<float?>("DedIncBns")
                        .HasColumnType("real");

                    b.Property<float?>("DedIncBonusOf")
                        .HasColumnType("real");

                    b.Property<float?>("DiplomaassoDed")
                        .HasColumnType("real");

                    b.Property<float?>("Dishantenna")
                        .HasColumnType("real");

                    b.Property<float?>("Donation")
                        .HasColumnType("real");

                    b.Property<float?>("EduAlloDed")
                        .HasColumnType("real");

                    b.Property<float?>("EduAllow")
                        .HasColumnType("real");

                    b.Property<float?>("ElectricCharge")
                        .HasColumnType("real");

                    b.Property<float?>("EmpClubDed")
                        .HasColumnType("real");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<float?>("EnggassoDed")
                        .HasColumnType("real");

                    b.Property<float?>("FesBonusDed")
                        .HasColumnType("real");

                    b.Property<float?>("FestivalBonus")
                        .HasColumnType("real");

                    b.Property<float?>("FoodAllow")
                        .HasColumnType("real");

                    b.Property<float?>("GasAllow")
                        .HasColumnType("real");

                    b.Property<float?>("Gascharge")
                        .HasColumnType("real");

                    b.Property<int?>("HBLId")
                        .HasColumnType("int");

                    b.Property<float?>("HazScheme")
                        .HasColumnType("real");

                    b.Property<float?>("HbloanDed")
                        .HasColumnType("real");

                    b.Property<float?>("HouseRent")
                        .HasColumnType("real");

                    b.Property<float?>("HrExp")
                        .HasColumnType("real");

                    b.Property<float?>("IncBonusDed")
                        .HasColumnType("real");

                    b.Property<float?>("IncomeTax")
                        .HasColumnType("real");

                    b.Property<bool>("IsAdvAgainstExp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdvFacility")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdvInTaxDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdvWagesDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsArrearBasic")
                        .HasColumnType("bit");

                    b.Property<bool>("IsArrearBonus")
                        .HasColumnType("bit");

                    b.Property<bool>("IsArrearInTaxDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAttAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBS")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCanteenAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChargAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCheForum")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChemicalAsso")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChemicalForum")
                        .HasColumnType("bit");

                    b.Property<bool>("IsComPfcount")
                        .HasColumnType("bit");

                    b.Property<bool>("IsContainSub")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConvAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConvAllowDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDapEmpClub")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDearAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDedIncBns")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDedIncBonusOf")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDiplomaassoDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDishantenna")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDonation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEduAlloDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEduAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsElectricCharge")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmpClubDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnggassoDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFa")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFesBonus")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFestivalBonus")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGasAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGascharge")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHazScheme")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHbloan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHr")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHrexp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsIncBonusDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsIncomeTax")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMa")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMaterialLoan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMcloan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMedicalExp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMedicalLoanDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMiscAdd")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMiscDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMobileAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMoktab")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNightAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOffWlfareAsso")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOfficeclubDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOwaSub")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPersonalPay")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPf")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPfAdd")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPfloann")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPurChange")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPurchaseAdv")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRevenueStamp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRiskAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSalaryAdv")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSiftAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTAExp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTelcharge")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTiffinAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrncharge")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUnionSubDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWFL")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWagesaAdv")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWashingAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWatercharge")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWfloanLocal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWfloanOther")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWfsub")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWpfloanDed")
                        .HasColumnType("bit");

                    b.Property<int?>("LId1")
                        .HasColumnType("int");

                    b.Property<int?>("LId2")
                        .HasColumnType("int");

                    b.Property<int?>("LId3")
                        .HasColumnType("int");

                    b.Property<int?>("MCLId")
                        .HasColumnType("int");

                    b.Property<float?>("MadicalAllow")
                        .HasColumnType("real");

                    b.Property<float?>("MaterialLoanDed")
                        .HasColumnType("real");

                    b.Property<float?>("McloanDed")
                        .HasColumnType("real");

                    b.Property<float?>("MedicalExp")
                        .HasColumnType("real");

                    b.Property<float?>("MedicalLoanDed")
                        .HasColumnType("real");

                    b.Property<float?>("MiscAdd")
                        .HasColumnType("real");

                    b.Property<float?>("MiscDed")
                        .HasColumnType("real");

                    b.Property<float?>("MobileAllow")
                        .HasColumnType("real");

                    b.Property<float?>("Moktab")
                        .HasColumnType("real");

                    b.Property<float?>("NightAllow")
                        .HasColumnType("real");

                    b.Property<float?>("OffWlfareAsso")
                        .HasColumnType("real");

                    b.Property<float?>("OfficeclubDed")
                        .HasColumnType("real");

                    b.Property<float?>("OwaSub")
                        .HasColumnType("real");

                    b.Property<int?>("PFLId")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<float?>("PersonalPay")
                        .HasColumnType("real");

                    b.Property<float?>("Pf")
                        .HasColumnType("real");

                    b.Property<float?>("PfAdd")
                        .HasColumnType("real");

                    b.Property<float?>("PfloannDed")
                        .HasColumnType("real");

                    b.Property<float?>("PurChange")
                        .HasColumnType("real");

                    b.Property<float?>("PurchaseAdv")
                        .HasColumnType("real");

                    b.Property<float?>("RevenueStamp")
                        .HasColumnType("real");

                    b.Property<float?>("RiskAllow")
                        .HasColumnType("real");

                    b.Property<float?>("SalaryAdv")
                        .HasColumnType("real");

                    b.Property<float?>("SiftAllow")
                        .HasColumnType("real");

                    b.Property<float?>("TAExpense")
                        .HasColumnType("real");

                    b.Property<float?>("TeliphoneCharge")
                        .HasColumnType("real");

                    b.Property<float?>("TiffinAllow")
                        .HasColumnType("real");

                    b.Property<float?>("Transportcharge")
                        .HasColumnType("real");

                    b.Property<float?>("UnionSubDed")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<float?>("WFL")
                        .HasColumnType("real");

                    b.Property<float?>("WagesaAdv")
                        .HasColumnType("real");

                    b.Property<float?>("WashingAllow")
                        .HasColumnType("real");

                    b.Property<float?>("Watercharge")
                        .HasColumnType("real");

                    b.Property<int?>("WelfareLId")
                        .HasColumnType("int");

                    b.Property<float?>("WfloanLocal")
                        .HasColumnType("real");

                    b.Property<float?>("WfloanOther")
                        .HasColumnType("real");

                    b.Property<float?>("Wfsub")
                        .HasColumnType("real");

                    b.Property<float?>("WpfloanDed")
                        .HasColumnType("real");

                    b.HasKey("SalaryId");

                    b.HasIndex("BId");

                    b.HasIndex("EmpId");

                    b.HasIndex("HBLId");

                    b.HasIndex("LId1");

                    b.HasIndex("LId2");

                    b.HasIndex("LId3");

                    b.HasIndex("MCLId");

                    b.HasIndex("PFLId");

                    b.HasIndex("WelfareLId");

                    b.ToTable("HR_Emp_Salary");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_ShiftInput", b =>
                {
                    b.Property<int>("ShiftInputId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime>("DtDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("ShiftInputId");

                    b.HasIndex("EmpId");

                    b.HasIndex("ShiftId");

                    b.ToTable("HR_Emp_ShiftInput");
                });

            modelBuilder.Entity("GTERP.Models.HR_IncType", b =>
                {
                    b.Property<int>("IncTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<string>("IncType")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("IncTypeId");

                    b.ToTable("HR_IncType");
                });

            modelBuilder.Entity("GTERP.Models.HR_Leave_Avail", b =>
                {
                    b.Property<int>("LvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtLvInput")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("InputType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LTypeId")
                        .HasColumnType("int");

                    b.Property<float>("LvApp")
                        .HasColumnType("real");

                    b.Property<string>("LvType")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<float?>("TotalDay")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("LvId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.HasIndex("LTypeId");

                    b.ToTable("HR_Leave_Avail");
                });

            modelBuilder.Entity("GTERP.Models.HR_Leave_Balance", b =>
                {
                    b.Property<int>("LvBalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("AACCL")
                        .HasColumnType("real");

                    b.Property<float?>("ABL")
                        .HasColumnType("real");

                    b.Property<float?>("ACCL")
                        .HasColumnType("real");

                    b.Property<float?>("ACL")
                        .HasColumnType("real");

                    b.Property<float?>("AEL")
                        .HasColumnType("real");

                    b.Property<float?>("ALWP")
                        .HasColumnType("real");

                    b.Property<float?>("AML")
                        .HasColumnType("real");

                    b.Property<float?>("ASL")
                        .HasColumnType("real");

                    b.Property<float?>("ASPL")
                        .HasColumnType("real");

                    b.Property<float?>("ATL")
                        .HasColumnType("real");

                    b.Property<float?>("BL")
                        .HasColumnType("real");

                    b.Property<float>("CL")
                        .HasColumnType("real");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtOpBal")
                        .HasColumnType("datetime2");

                    b.Property<int>("DtOpeningBalance")
                        .HasColumnType("int");

                    b.Property<float>("EL")
                        .HasColumnType("real");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<float?>("LWP")
                        .HasColumnType("real");

                    b.Property<float?>("ML")
                        .HasColumnType("real");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<float>("SL")
                        .HasColumnType("real");

                    b.Property<float?>("SPL")
                        .HasColumnType("real");

                    b.Property<float?>("TL")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("LvBalId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.ToTable("HR_Leave_Balance");
                });

            modelBuilder.Entity("GTERP.Models.HR_ProcessLock", b =>
                {
                    b.Property<int>("ProcessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime>("DtDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtTran")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<byte>("IsLock")
                        .HasColumnType("tinyint");

                    b.Property<string>("LockType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("ProcessId");

                    b.ToTable("HR_ProcessLock");
                });

            modelBuilder.Entity("GTERP.Models.HR_ProcessedData", b =>
                {
                    b.Property<long>("PId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdJusted")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtPunchDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("EOT")
                        .HasColumnType("real");

                    b.Property<string>("EmpCode")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<float>("IsLunchDay")
                        .HasColumnType("real");

                    b.Property<float>("IsNightShift")
                        .HasColumnType("real");

                    b.Property<DateTime?>("Late")
                        .HasColumnType("datetime2");

                    b.Property<float>("OTHour")
                        .HasColumnType("real");

                    b.Property<float>("OTHourDed")
                        .HasColumnType("real");

                    b.Property<float>("ROT")
                        .HasColumnType("real");

                    b.Property<float>("RegHour")
                        .HasColumnType("real");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("SectId")
                        .HasColumnType("int");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShiftIn")
                        .HasColumnType("datetime2");

                    b.Property<float>("StaffOT")
                        .HasColumnType("real");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<DateTime>("TimeIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeOut")
                        .HasColumnType("datetime2");

                    b.HasKey("PId");

                    b.ToTable("HR_ProcessedData");
                });

            modelBuilder.Entity("GTERP.Models.HR_ProssType", b =>
                {
                    b.Property<int>("ProssId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("DaySts")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("DayStsB")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsLock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime>("ProssDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("ProssId");

                    b.ToTable("HR_ProssType");
                });

            modelBuilder.Entity("GTERP.Models.HR_ReportType", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("ReportName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ReportType")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("SLNo")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("ReportId");

                    b.ToTable("HR_ReportType");
                });

            modelBuilder.Entity("GTERP.Models.HR_TempCount", b =>
                {
                    b.Property<int>("TId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Cnt")
                        .HasColumnType("real");

                    b.Property<float>("Cnt1")
                        .HasColumnType("real");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Code1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime>("DateTime1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTime2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTime3")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Vchr")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Vchr1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Vchr2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("TId");

                    b.ToTable("HR_TempCount");
                });

            modelBuilder.Entity("GTERP.Models.HR_TempJob", b =>
                {
                    b.Property<int>("TempCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("Absent")
                        .HasColumnType("real");

                    b.Property<string>("Band")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComAdd1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComAdd2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("DeptId")
                        .HasColumnType("smallint");

                    b.Property<string>("DeptName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("DesigId")
                        .HasColumnType("smallint");

                    b.Property<string>("DesigName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DtJoin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DtReleased")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EmpId")
                        .HasColumnType("bigint");

                    b.Property<string>("EmpName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Eot")
                        .HasColumnType("real");

                    b.Property<string>("Floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Gs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float?>("Hday")
                        .HasColumnType("real");

                    b.Property<float?>("LateDay")
                        .HasColumnType("real");

                    b.Property<float?>("LateHrTtl")
                        .HasColumnType("real");

                    b.Property<float?>("Leave")
                        .HasColumnType("real");

                    b.Property<string>("Line")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Lunch")
                        .HasColumnType("real");

                    b.Property<float?>("Night")
                        .HasColumnType("real");

                    b.Property<float?>("Othr")
                        .HasColumnType("real");

                    b.Property<float?>("OthrDed")
                        .HasColumnType("real");

                    b.Property<float?>("OthrsTtl")
                        .HasColumnType("real");

                    b.Property<float?>("Present")
                        .HasColumnType("real");

                    b.Property<float?>("Rot")
                        .HasColumnType("real");

                    b.Property<short>("SectId")
                        .HasColumnType("smallint");

                    b.Property<string>("SectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Wday")
                        .HasColumnType("real");

                    b.HasKey("TempCardId");

                    b.ToTable("HR_TempJob");
                });

            modelBuilder.Entity("GTERP.Models.HomeSlider", b =>
                {
                    b.Property<int>("HomeSliderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SliderCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("SliderImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SliderImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SliderInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SliderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HomeSliderId");

                    b.ToTable("HomeSlider");
                });

            modelBuilder.Entity("GTERP.Models.ImageCriteria", b =>
                {
                    b.Property<int>("ImageCriteriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageCriteriaCaption")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageCriteriaId");

                    b.ToTable("ImageCriterias");
                });

            modelBuilder.Entity("GTERP.Models.InvoiceMain", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal>("DueAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("InvoiceDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("InvoiceReferance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PaidAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<decimal>("ttlSumAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("userid")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("InvoiceId");

                    b.ToTable("InvoiceMains");
                });

            modelBuilder.Entity("GTERP.Models.InvoiceSub", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ActiveFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ActiveToDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ActiveYesNo")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("InvoiceMainInvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("SoftwarePackageId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InvoiceId");

                    b.HasIndex("InvoiceMainInvoiceId");

                    b.HasIndex("SoftwarePackageId");

                    b.ToTable("InvoiceSubs");
                });

            modelBuilder.Entity("GTERP.Models.InvoiceTermsSub", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvoiceMainInvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("RowNo")
                        .HasColumnType("int");

                    b.Property<string>("Terms")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvoiceId");

                    b.HasIndex("InvoiceMainInvoiceId");

                    b.ToTable("InvoiceTermsSubs");
                });

            modelBuilder.Entity("GTERP.Models.ItemDesc", b =>
                {
                    b.Property<int>("ItemDescId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ItemDescCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescHSCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemDescShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ItemGroupId")
                        .HasColumnType("int");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("ItemDescId");

                    b.HasIndex("ItemGroupId");

                    b.ToTable("ItemDescs");
                });

            modelBuilder.Entity("GTERP.Models.ItemGroup", b =>
                {
                    b.Property<int>("ItemGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ItemGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemGroupHSCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemGroupName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(100);

                    b.Property<string>("ItemGroupShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("ItemMargin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("ItemGroupId");

                    b.ToTable("ItemGroups");
                });

            modelBuilder.Entity("GTERP.Models.JobNo", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("DocumentNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InputDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobId");

                    b.ToTable("jobno");
                });

            modelBuilder.Entity("GTERP.Models.LCNature", b =>
                {
                    b.Property<int>("LCNatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LCNatureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LCNatureShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("LCNatureId");

                    b.ToTable("LCNatures");
                });

            modelBuilder.Entity("GTERP.Models.LCStatus", b =>
                {
                    b.Property<int>("LCStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LCStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LCStatusShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("LCStatusId");

                    b.ToTable("LCStatus");
                });

            modelBuilder.Entity("GTERP.Models.LCType", b =>
                {
                    b.Property<int>("LCTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LCTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LCTypeShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("LCTypeId");

                    b.ToTable("LCTypes");
                });

            modelBuilder.Entity("GTERP.Models.LienBank", b =>
                {
                    b.Property<int>("LienBankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LienBankAccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LienBankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SwiftCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("LienBankId");

                    b.HasIndex("CountryId");

                    b.ToTable("LienBanks");
                });

            modelBuilder.Entity("GTERP.Models.MenuPermission_Details", b =>
                {
                    b.Property<int>("MenuPermissionDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReport")
                        .HasColumnType("bit");

                    b.Property<bool>("IsView")
                        .HasColumnType("bit");

                    b.Property<int>("MenuPermissionId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleMenuId")
                        .HasColumnType("int");

                    b.HasKey("MenuPermissionDetailsId");

                    b.HasIndex("MenuPermissionId");

                    b.HasIndex("ModuleMenuId");

                    b.ToTable("MenuPermissionDetails");
                });

            modelBuilder.Entity("GTERP.Models.MenuPermission_Master", b =>
                {
                    b.Property<int>("MenuPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("comid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("useridPermission")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("useridUpdate")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("MenuPermissionId");

                    b.ToTable("MenuPermissionMasters");
                });

            modelBuilder.Entity("GTERP.Models.Module", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ModuleCaption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleClassa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleClassi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<byte[]>("ModuleImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ModuleImageExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SLNo")
                        .HasColumnType("int");

                    b.Property<int>("isInactive")
                        .HasColumnType("int");

                    b.HasKey("ModuleId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("GTERP.Models.ModuleGroup", b =>
                {
                    b.Property<int>("ModuleGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleGroupCaption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ModuleGroupImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ModuleGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int?>("SLNo")
                        .HasColumnType("int");

                    b.HasKey("ModuleGroupId");

                    b.HasIndex("ModuleId");

                    b.ToTable("ModuleGroups");
                });

            modelBuilder.Entity("GTERP.Models.ModuleMenu", b =>
                {
                    b.Property<int>("ModuleMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ImageCriteriaId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<string>("ModuleImageExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleMenuCaption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleMenuClassi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleMenuController")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ModuleMenuImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ModuleMenuLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleMenuName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("SLNo")
                        .HasColumnType("int");

                    b.Property<int>("isInactive")
                        .HasColumnType("int");

                    b.Property<int>("isParent")
                        .HasColumnType("int");

                    b.HasKey("ModuleMenuId");

                    b.HasIndex("ImageCriteriaId");

                    b.HasIndex("ModuleGroupId");

                    b.HasIndex("ModuleId");

                    b.HasIndex("ParentId");

                    b.ToTable("ModuleMenus");
                });

            modelBuilder.Entity("GTERP.Models.MonthName", b =>
                {
                    b.Property<int>("MonthNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BanglaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortBanglaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MonthNameId");

                    b.ToTable("MonthNames");
                });

            modelBuilder.Entity("GTERP.Models.NotifyParty", b =>
                {
                    b.Property<long>("NotifyPartyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerInformationsBuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotifyPartyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotifyPartyNameSearch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PortOfDischargeId")
                        .HasColumnType("int");

                    b.Property<string>("ShippedTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShopCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("NotifyPartyId");

                    b.HasIndex("BuyerInformationsBuyerId");

                    b.HasIndex("CountryId");

                    b.HasIndex("PortOfDischargeId");

                    b.ToTable("NotifyPartys");
                });

            modelBuilder.Entity("GTERP.Models.OpeningBank", b =>
                {
                    b.Property<int>("OpeningBankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("OpeningBankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SwiftCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("OpeningBankId");

                    b.HasIndex("CountryId");

                    b.ToTable("OpeningBanks");
                });

            modelBuilder.Entity("GTERP.Models.PaymentTerms", b =>
                {
                    b.Property<int>("PaymentTermsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<string>("PaymentTermsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PaymentTermsShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("PaymentTermsId");

                    b.ToTable("PaymentTerms");
                });

            modelBuilder.Entity("GTERP.Models.PaymentType", b =>
                {
                    b.Property<int>("PaymentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TypeShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("PaymentTypeId");

                    b.ToTable("PaymentTypes");
                });

            modelBuilder.Entity("GTERP.Models.Payroll.SalaryProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdvFestType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdvType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Command")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Days")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FestType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bonusAdvPer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bonusPer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtELPrcFirst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtELPrcLast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtFest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtFestEffect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtFirst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtLast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtPayment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtSalAdv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("salDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SalaryProcess");
                });

            modelBuilder.Entity("GTERP.Models.Payroll_SalaryAddition", b =>
                {
                    b.Property<int>("SalAddId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddTypeId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DtInput")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DtJoin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("SalAddId");

                    b.HasIndex("AddTypeId");

                    b.HasIndex("EmpId");

                    b.ToTable("Payroll_SalaryAddition");
                });

            modelBuilder.Entity("GTERP.Models.PortOfDischarge", b =>
                {
                    b.Property<int>("PortOfDischargeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("PortCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortOfDischargeName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(200);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("PortOfDischargeId");

                    b.HasIndex("CountryId");

                    b.ToTable("PortOfDischarges");
                });

            modelBuilder.Entity("GTERP.Models.PortOfLoading", b =>
                {
                    b.Property<int>("PortOfLoadingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("PortCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortOfLoadingName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(200);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("PortOfLoadingId");

                    b.HasIndex("CountryId");

                    b.ToTable("PortOfLoadings");
                });

            modelBuilder.Entity("GTERP.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductBarcode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ProductBrand")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte[]>("ProductImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProductModel")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<decimal>("vatAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("vatPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CountryId");

                    b.HasIndex("SubCategoryId");

                    b.HasIndex("UnitId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("GTERP.Models.ProductCategory", b =>
                {
                    b.Property<long>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductCategoryId");

                    b.ToTable("ProductCategory");
                });

            modelBuilder.Entity("GTERP.Models.ProductGroup", b =>
                {
                    b.Property<int>("ProductGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductGroupId");

                    b.ToTable("ProductGroup");
                });

            modelBuilder.Entity("GTERP.Models.ProductRegistration", b =>
                {
                    b.Property<int>("ProductRegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account_Name")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<DateTime>("Addeddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Area_Name")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CustomerPhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DealerPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("Item_Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Item_Name")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("OfferSmsResult")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Organization_Name")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Party_Number")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("ProductRegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductRegistrationSerialNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProductSize")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ProductType")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SalesChannel")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(3000)")
                        .HasMaxLength(300);

                    b.Property<string>("UserPhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Zone_Name")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("userid")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("ProductRegistrationId");

                    b.ToTable("ProductRegistrations");
                });

            modelBuilder.Entity("GTERP.Models.ProductSerial", b =>
                {
                    b.Property<int>("ProductSerialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductSerialNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseSubId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WarrentyId")
                        .HasColumnType("int");

                    b.HasKey("ProductSerialId");

                    b.HasIndex("PurchaseSubId");

                    b.HasIndex("WarrentyId");

                    b.ToTable("ProductSerial");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseMain", b =>
                {
                    b.Property<int>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("CardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ChkPer")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DisPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DueAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetAmountBDT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NetInWords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PaidAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaidInWords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PrimaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PurchaseDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("PurchaseNo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("PurchasePerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SecoundaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ServiceCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SupplierContactId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<decimal>("ttlCountQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndDisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlSumAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlSumQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("userid")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("PurchaseId");

                    b.HasIndex("CountryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseMains");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseSub", b =>
                {
                    b.Property<int>("PurchaseSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Carton")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IndChkPer")
                        .HasColumnType("int");

                    b.Property<decimal>("IndDisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndDisPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndVatPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PCTN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseMainPurchaseId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("PurchaseSubId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseMainPurchaseId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("PurchaseSubs");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseTermsSub", b =>
                {
                    b.Property<int>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PurchaseMainPurchaseId")
                        .HasColumnType("int");

                    b.Property<int>("RowNo")
                        .HasColumnType("int");

                    b.Property<string>("Terms")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PurchaseId");

                    b.HasIndex("PurchaseMainPurchaseId");

                    b.ToTable("PurchaseTermsSubs");
                });

            modelBuilder.Entity("GTERP.Models.SalesMain", b =>
                {
                    b.Property<int>("SalesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("CardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ChkPer")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CustomerContactId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DisPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DueAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetAmountBDT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NetInWords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PaidAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaidInWords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PrimaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("SalesDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SalesNo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("SalesPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecoundaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ServiceCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<decimal>("ttlCountQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndDisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlSumAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlSumQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("userid")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("SalesId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CustomerId");

                    b.ToTable("SalesMains");
                });

            modelBuilder.Entity("GTERP.Models.SalesPaymentSub", b =>
                {
                    b.Property<int>("SalesPaymentSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentCardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<int>("SalesId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesMainSalesId")
                        .HasColumnType("int");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int?>("vChartofAccountsAccId")
                        .HasColumnType("int");

                    b.HasKey("SalesPaymentSubId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("SalesMainSalesId");

                    b.HasIndex("vChartofAccountsAccId");

                    b.ToTable("SalesPaymentSubs");
                });

            modelBuilder.Entity("GTERP.Models.SalesSub", b =>
                {
                    b.Property<int>("SalesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Carton")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IndChkPer")
                        .HasColumnType("int");

                    b.Property<decimal>("IndDisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndDisPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndVatPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PCTN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductSerialId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int?>("SalesMainSalesId")
                        .HasColumnType("int");

                    b.Property<int>("SalesTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("SalesId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductSerialId");

                    b.HasIndex("SalesMainSalesId");

                    b.HasIndex("SalesTypeId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("SalesSubs");
                });

            modelBuilder.Entity("GTERP.Models.SalesTermsSub", b =>
                {
                    b.Property<int>("SalesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowNo")
                        .HasColumnType("int");

                    b.Property<int?>("SalesMainSalesId")
                        .HasColumnType("int");

                    b.Property<string>("Terms")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SalesId");

                    b.HasIndex("SalesMainSalesId");

                    b.ToTable("SalesTermsSubs");
                });

            modelBuilder.Entity("GTERP.Models.SalesType", b =>
                {
                    b.Property<int>("SalesTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TypeShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("SalesTypeId");

                    b.ToTable("SalesType");
                });

            modelBuilder.Entity("GTERP.Models.ShipMode", b =>
                {
                    b.Property<int>("ShipModeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ShipModeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ShipModeShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("ShipModeId");

                    b.ToTable("ShipModes");
                });

            modelBuilder.Entity("GTERP.Models.SmsSetting", b =>
                {
                    b.Property<int>("SmsSettingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Wid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("isInactive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsAbsent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsCollection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsLate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsPresent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsSender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SmsSettingID");

                    b.ToTable("smssettings");
                });

            modelBuilder.Entity("GTERP.Models.SoftwarePackage", b =>
                {
                    b.Property<int>("SoftwarePackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LinkAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwarePackageCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwarePackageDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("SoftwarePackageFileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("SoftwarePackageImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SoftwarePackageImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SoftwarePackageId");

                    b.ToTable("SoftwarePackages");
                });

            modelBuilder.Entity("GTERP.Models.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("StateCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StateId");

                    b.HasIndex("CountryId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("GTERP.Models.StyleInformation", b =>
                {
                    b.Property<int>("StyleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BrandInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("FOB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Fabrication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FirstShipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HSCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastShipDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderQty")
                        .HasColumnType("int");

                    b.Property<long?>("ProductCategoryId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ProductGroupId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SalesCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StyleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StyleName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StyleStatusId")
                        .HasColumnType("int");

                    b.Property<string>("UnitMasterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("StyleId");

                    b.HasIndex("BrandInfoId");

                    b.HasIndex("BuyerId");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("ProductGroupId");

                    b.HasIndex("StyleStatusId");

                    b.HasIndex("UnitMasterId");

                    b.ToTable("StyleInformation");
                });

            modelBuilder.Entity("GTERP.Models.StyleInformations_Temp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrandInfoId")
                        .HasColumnType("int");

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<string>("BuyerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("FOB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("FirstShipDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastShipDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderQty")
                        .HasColumnType("int");

                    b.Property<long?>("ProductCategoryId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ProductGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ProductGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SalesCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StyleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StyleId")
                        .HasColumnType("int");

                    b.Property<string>("StyleName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("StyleStatusId")
                        .HasColumnType("int");

                    b.Property<string>("StyleStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitMasterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StyleInformations_Temps");
                });

            modelBuilder.Entity("GTERP.Models.StyleStatus", b =>
                {
                    b.Property<int>("StyleStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StyleStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("StyleStatusShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("StyleStatusId");

                    b.ToTable("StyleStatus");
                });

            modelBuilder.Entity("GTERP.Models.SubCategory", b =>
                {
                    b.Property<int>("SubCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("LinkAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCategoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCategoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("SubCategoryFileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("SubCategoryImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SubCategoryImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubCategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategory");
                });

            modelBuilder.Entity("GTERP.Models.SuccessLog", b =>
                {
                    b.Property<int>("SuccessLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommandType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SuccessLogId");

                    b.ToTable("SuccessLogs");
                });

            modelBuilder.Entity("GTERP.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("OpBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("PrimaryAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("SecoundaryAddress")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("SupplierCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.HasKey("SupplierId");

                    b.HasIndex("CountryId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("GTERP.Models.SupplierContact", b =>
                {
                    b.Property<int>("SupplierContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactEmailNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("SupplierContactId");

                    b.HasIndex("SupplierId");

                    b.ToTable("SupplierContacts");
                });

            modelBuilder.Entity("GTERP.Models.SupplierInformation", b =>
                {
                    b.Property<int>("ContactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ContactID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalOffice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Merchandiser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(200);

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("ContactID");

                    b.HasIndex("CountryId");

                    b.ToTable("SupplierInformations");
                });

            modelBuilder.Entity("GTERP.Models.Support", b =>
                {
                    b.Property<int>("SupportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid>("ShipViewId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("SupportId");

                    b.ToTable("Supports");
                });

            modelBuilder.Entity("GTERP.Models.Temp_COM_MasterLC_Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CatNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationPO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fabrication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Factor")
                        .HasColumnType("real");

                    b.Property<string>("HSCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kimball")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("OrderQty")
                        .HasColumnType("real");

                    b.Property<string>("OrderType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderUOM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PONo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantityPcs")
                        .HasColumnType("int");

                    b.Property<int>("SL")
                        .HasColumnType("int");

                    b.Property<string>("ShipDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Style")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TotalValue")
                        .HasColumnType("real");

                    b.Property<string>("UOM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Temp_COM_MasterLC_Details");
                });

            modelBuilder.Entity("GTERP.Models.Temp_COM_MasterLC_Master", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Buyer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsigneeBank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Curency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Incoterm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Insurance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LCIssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LCQty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LCValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastShipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OpeningBank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentTerm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortOfDestination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortOfDischarge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortOfLoading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SL")
                        .HasColumnType("int");

                    b.Property<string>("Shipmode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tolerance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Temp_COM_MasterLC_Masters");
                });

            modelBuilder.Entity("GTERP.Models.Temp_COM_ProformaInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImportPONo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImportQty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImportRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LCAF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PIDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PINo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SL")
                        .HasColumnType("int");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Temp_COM_ProformaInvoices");
                });

            modelBuilder.Entity("GTERP.Models.TermsMain", b =>
                {
                    b.Property<int>("TermsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TermsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TermsRemarks")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TermsId");

                    b.ToTable("TermsMain");
                });

            modelBuilder.Entity("GTERP.Models.TermsSerialSub", b =>
                {
                    b.Property<int>("TermsSerialSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SerialNo")
                        .HasColumnType("int");

                    b.Property<int>("TermsId")
                        .HasColumnType("int");

                    b.Property<int>("TermsSerialNo")
                        .HasColumnType("int");

                    b.Property<int>("TermsSubId")
                        .HasColumnType("int");

                    b.HasKey("TermsSerialSubId");

                    b.HasIndex("TermsSubId");

                    b.ToTable("TermsSerialSub");
                });

            modelBuilder.Entity("GTERP.Models.TermsSub", b =>
                {
                    b.Property<int>("TermsSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Terms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermsDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TermsId")
                        .HasColumnType("int");

                    b.Property<int?>("TermsMainTermsId")
                        .HasColumnType("int");

                    b.Property<int>("TermsSerialNo")
                        .HasColumnType("int");

                    b.HasKey("TermsSubId");

                    b.HasIndex("TermsMainTermsId");

                    b.ToTable("TermsSub");
                });

            modelBuilder.Entity("GTERP.Models.TradeTerm", b =>
                {
                    b.Property<int>("TradeTermId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TradeTermName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TradeTermShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("TradeTermId");

                    b.ToTable("TradeTerms");
                });

            modelBuilder.Entity("GTERP.Models.Unit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnitId");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("GTERP.Models.UnitGroup", b =>
                {
                    b.Property<string>("UnitGroupId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UnitGroupId");

                    b.ToTable("UnitGroups");
                });

            modelBuilder.Entity("GTERP.Models.UnitMaster", b =>
                {
                    b.Property<string>("UnitMasterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsBaseUOM")
                        .HasColumnType("bit");

                    b.Property<decimal?>("RelativeFactor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitGroupId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnitMasterId");

                    b.HasIndex("UnitGroupId");

                    b.ToTable("UnitMasters");
                });

            modelBuilder.Entity("GTERP.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("LoginUser");
                });

            modelBuilder.Entity("GTERP.Models.UserCompanyPermission", b =>
                {
                    b.Property<int>("UserCompanyPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("SortNo")
                        .HasColumnType("int");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.HasKey("UserCompanyPermissionId");

                    b.ToTable("UserCompanyPermissions");
                });

            modelBuilder.Entity("GTERP.Models.UserLogingInfo", b =>
                {
                    b.Property<int>("UserLogingInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeviceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LoginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MacAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Platform")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebBrowserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<string>("userid")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("UserLogingInfoId");

                    b.ToTable("UserLogingInfos");
                });

            modelBuilder.Entity("GTERP.Models.UserTransactionLog", b =>
                {
                    b.Property<int>("UserTransactionLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommandType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlagValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FromDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ToDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionStatement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<string>("userid")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("UserTransactionLogId");

                    b.ToTable("UserTransactionLogs");
                });

            modelBuilder.Entity("GTERP.Models.VoucherMain", b =>
                {
                    b.Property<int>("VoucherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<double>("ConvRate")
                        .HasColumnType("float");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("CountryIdLocal")
                        .HasColumnType("int");

                    b.Property<bool>("IsCash")
                        .HasColumnType("bit");

                    b.Property<string>("Referance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferanceThree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferanceTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<double>("VAmount")
                        .HasColumnType("float");

                    b.Property<double>("VAmountLocal")
                        .HasColumnType("float");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VoucherInputDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<int>("VoucherTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("isAutoEntry")
                        .HasColumnType("bit");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vAmountInWords")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VoucherId");

                    b.HasIndex("VoucherTypeId");

                    b.ToTable("VoucherMains");
                });

            modelBuilder.Entity("GTERP.Models.VoucherSub", b =>
                {
                    b.Property<int>("VoucherSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<int?>("ChartOfAccountAccId")
                        .HasColumnType("int");

                    b.Property<double>("CreditForeign")
                        .HasColumnType("float");

                    b.Property<int>("CurrencyForeignId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<double>("CurrencyRate")
                        .HasColumnType("float");

                    b.Property<double>("DebitForeign")
                        .HasColumnType("float");

                    b.Property<string>("Note1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SRowNo")
                        .HasColumnType("int");

                    b.Property<double>("TKCredit")
                        .HasColumnType("float");

                    b.Property<double>("TKCreditForeign")
                        .HasColumnType("float");

                    b.Property<double>("TKDebit")
                        .HasColumnType("float");

                    b.Property<double>("TKDebitForeign")
                        .HasColumnType("float");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherMainVoucherId")
                        .HasColumnType("int");

                    b.Property<int>("ccId")
                        .HasColumnType("int");

                    b.HasKey("VoucherSubId");

                    b.HasIndex("ChartOfAccountAccId");

                    b.HasIndex("CurrencyForeignId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("VoucherMainVoucherId");

                    b.ToTable("VoucherSubs");
                });

            modelBuilder.Entity("GTERP.Models.VoucherSubChecno", b =>
                {
                    b.Property<int>("VoucherSubCheckId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("ChkNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowNoChk")
                        .HasColumnType("int");

                    b.Property<int>("SRowNo")
                        .HasColumnType("int");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.Property<int>("VoucherSubId")
                        .HasColumnType("int");

                    b.Property<string>("dtChk")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VoucherSubCheckId");

                    b.HasIndex("VoucherSubId");

                    b.ToTable("VoucherSubChecnos");
                });

            modelBuilder.Entity("GTERP.Models.VoucherSubSection", b =>
                {
                    b.Property<int>("VoucherSubSectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Note1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowNoSSec")
                        .HasColumnType("int");

                    b.Property<int>("SRowNo")
                        .HasColumnType("int");

                    b.Property<int>("SubSectId")
                        .HasColumnType("int");

                    b.Property<int?>("SubSectionSubSectId")
                        .HasColumnType("int");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.Property<int>("VoucherSubId")
                        .HasColumnType("int");

                    b.HasKey("VoucherSubSectionId");

                    b.HasIndex("SubSectionSubSectId");

                    b.HasIndex("VoucherSubId");

                    b.ToTable("VoucherSubSections");
                });

            modelBuilder.Entity("GTERP.Models.VoucherType", b =>
                {
                    b.Property<int>("VoucherTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VoucherTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherTypeNameShort")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VoucherTypeId");

                    b.ToTable("VoucherTypes");
                });

            modelBuilder.Entity("GTERP.Models.Warehouse", b =>
                {
                    b.Property<int>("WarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("WhName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("WhShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("WarehouseId");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("GTERP.Models.Warrenty", b =>
                {
                    b.Property<int>("WarrentyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("WarrentyDay")
                        .HasColumnType("int");

                    b.Property<string>("WarrentyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WarrentyId");

                    b.ToTable("Warrenty");
                });

            modelBuilder.Entity("GTERP.Models.WorkOrderMaster", b =>
                {
                    b.Property<int>("WorkOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("AdvancePayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("AgreementDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprovedById")
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ConversionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<int?>("CurrencyId1")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateApproval")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemDescId")
                        .HasColumnType("int");

                    b.Property<string>("ItemDescList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(500);

                    b.Property<int?>("ItemGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ItemGroupName")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasMaxLength(500);

                    b.Property<decimal?>("NetPayable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtherExp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OtherTerms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentTerms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecommenedById")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SalesTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceContract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ServiceContractEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ServiceContractStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shipping")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("ToPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WODetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WorkOrderAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("WorkOrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkOrderNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WorkOrderQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WorkOrderRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WorkOrderStatusId")
                        .HasColumnType("int");

                    b.Property<string>("WorkOrderType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("comid")
                        .HasColumnType("int");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("WorkOrderId");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("CurrencyId1");

                    b.HasIndex("ItemDescId");

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("RecommenedById");

                    b.HasIndex("SupplierId");

                    b.HasIndex("WorkOrderStatusId");

                    b.ToTable("WorkOrderMasters");
                });

            modelBuilder.Entity("GTERP.Models.WorkorderStatus", b =>
                {
                    b.Property<int>("WorkorderStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("WorkorderStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("WorkorderStatusShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("WorkorderStatusId");

                    b.ToTable("WorkorderStatus");
                });

            modelBuilder.Entity("GTERP.Models.YearName", b =>
                {
                    b.Property<int>("YearNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearBng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearEng")
                        .HasColumnType("int");

                    b.HasKey("YearNameId");

                    b.ToTable("YearNames");
                });

            modelBuilder.Entity("GTERP.Models.AttachmentSub", b =>
                {
                    b.HasOne("GTERP.Models.AttachmentMain", "vAttachmentMain")
                        .WithMany("vAttachmentSub")
                        .HasForeignKey("AttachmentMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.BankAccountNo", b =>
                {
                    b.HasOne("GTERP.Models.CommercialCompany", "CommercialCompanys")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId");

                    b.HasOne("GTERP.Models.OpeningBank", "OpeningBanks")
                        .WithMany("BankAccountNos")
                        .HasForeignKey("OpeningBankId");
                });

            modelBuilder.Entity("GTERP.Models.BankAccountNoLienBank", b =>
                {
                    b.HasOne("GTERP.Models.BuyerInformation", "BuyerInformations")
                        .WithMany()
                        .HasForeignKey("BuyerId");

                    b.HasOne("GTERP.Models.CommercialCompany", "CommercialCompanys")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId");

                    b.HasOne("GTERP.Models.Country", "Countrys")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("GTERP.Models.LienBank", "LienBanks")
                        .WithMany()
                        .HasForeignKey("LienBankId");

                    b.HasOne("GTERP.Models.SupplierInformation", "SupplierInformations")
                        .WithMany()
                        .HasForeignKey("SupplierId");
                });

            modelBuilder.Entity("GTERP.Models.BuyerInformation", b =>
                {
                    b.HasOne("GTERP.Models.BuyerGroup", "BuyerGroups")
                        .WithMany()
                        .HasForeignKey("BuyerGroupId");

                    b.HasOne("GTERP.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Employee", "EmployeeExport")
                        .WithMany()
                        .HasForeignKey("EmployeeIdExport");

                    b.HasOne("GTERP.Models.Employee", "EmployeeImport")
                        .WithMany()
                        .HasForeignKey("EmployeeIdImport");
                });

            modelBuilder.Entity("GTERP.Models.COM_BBLC_Details", b =>
                {
                    b.HasOne("GTERP.Models.COM_BBLC_Master", "COM_BBLC_Master")
                        .WithMany("COM_BBLC_Details")
                        .HasForeignKey("COM_BBLC_MasterBBLCId");

                    b.HasOne("GTERP.Models.COM_ProformaInvoice", "COM_ProformaInvoice")
                        .WithMany("COM_BBLC_Details")
                        .HasForeignKey("COM_ProformaInvoicePIId");
                });

            modelBuilder.Entity("GTERP.Models.COM_BBLC_Master", b =>
                {
                    b.HasOne("GTERP.Models.CommercialCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId");

                    b.HasOne("GTERP.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.DayList", "daylists")
                        .WithMany()
                        .HasForeignKey("DayListId");

                    b.HasOne("GTERP.Models.Destination", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.COM_GroupLC_Main", "COM_GroupLC_Main")
                        .WithMany()
                        .HasForeignKey("GroupLCId");

                    b.HasOne("GTERP.Models.LienBank", "LienBank")
                        .WithMany()
                        .HasForeignKey("LienBankId");

                    b.HasOne("GTERP.Models.OpeningBank", "OpeningBank")
                        .WithMany()
                        .HasForeignKey("OpeningBankId");

                    b.HasOne("GTERP.Models.PaymentTerms", "PaymentTermss")
                        .WithMany()
                        .HasForeignKey("PaymentTermsId");

                    b.HasOne("GTERP.Models.PortOfDischarge", "PortOfDischarge")
                        .WithMany()
                        .HasForeignKey("PortOfDischargeId");

                    b.HasOne("GTERP.Models.PortOfLoading", "PortOfLoading")
                        .WithMany()
                        .HasForeignKey("PortOfLoadingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ShipMode", "ShipMode")
                        .WithMany()
                        .HasForeignKey("ShipModeId");

                    b.HasOne("GTERP.Models.SupplierInformation", "SupplierInformation")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("GTERP.Models.TradeTerm", "TradeTerms")
                        .WithMany()
                        .HasForeignKey("TradeTermId");
                });

            modelBuilder.Entity("GTERP.Models.COM_CNFBillExportDetails", b =>
                {
                    b.HasOne("GTERP.Models.COM_CNFBillExportMaster", "COM_CNFBillExportMaster")
                        .WithMany("COM_CNFBillExportDetails")
                        .HasForeignKey("COM_CNFBillExportMasterCNFExpenseID");

                    b.HasOne("GTERP.Models.COM_CNFExpenseType", "COM_CNFExpenseTypes")
                        .WithMany("COM_CNFBillExportDetails")
                        .HasForeignKey("COM_CNFExpenseTypesExpenseHeadID");
                });

            modelBuilder.Entity("GTERP.Models.COM_CNFBillExportMaster", b =>
                {
                    b.HasOne("GTERP.Models.BuyerInformation", "BuyerInformations")
                        .WithMany()
                        .HasForeignKey("BuyerInformationsBuyerId");

                    b.HasOne("GTERP.Models.CommercialCompany", "Companies")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ExportInvoiceMaster", "ExportInvoiceMasters")
                        .WithMany()
                        .HasForeignKey("ExportInvoiceMastersInvoiceId");
                });

            modelBuilder.Entity("GTERP.Models.COM_CNFBillImportDetails", b =>
                {
                    b.HasOne("GTERP.Models.COM_CNFBillImportMaster", "COM_CNFBillImportMaster")
                        .WithMany("COM_CNFBillImportDetails")
                        .HasForeignKey("COM_CNFBillImportMasterCNFExpenseID");

                    b.HasOne("GTERP.Models.COM_CNFExpenseType", "COM_CNFExpenseTypes")
                        .WithMany("COM_CNFBillImportDetails")
                        .HasForeignKey("COM_CNFExpenseTypesExpenseHeadID");
                });

            modelBuilder.Entity("GTERP.Models.COM_CNFBillImportMaster", b =>
                {
                    b.HasOne("GTERP.Models.BuyerInformation", "BuyerInformations")
                        .WithMany()
                        .HasForeignKey("BuyerInformationsBuyerId");

                    b.HasOne("GTERP.Models.COM_BBLC_Master", "COM_BBLC_Masters")
                        .WithMany()
                        .HasForeignKey("COM_BBLC_MastersBBLCId");

                    b.HasOne("GTERP.Models.COM_CommercialInvoice", "COM_CommercialInvoices")
                        .WithMany()
                        .HasForeignKey("COM_CommercialInvoicesCommercialInvoiceId");

                    b.HasOne("GTERP.Models.CommercialCompany", "Companies")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.SupplierInformation", "SupplierInformations")
                        .WithMany()
                        .HasForeignKey("SupplierId");
                });

            modelBuilder.Entity("GTERP.Models.COM_CommercialInvoice", b =>
                {
                    b.HasOne("GTERP.Models.COM_BBLC_Master", "COM_BBLC_Master")
                        .WithMany("COM_CommercialInvoice")
                        .HasForeignKey("BBLCId");

                    b.HasOne("GTERP.Models.CommercialCompany", "CommercialCompany")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.CommercialLCType", "CommercialLCTypes")
                        .WithMany()
                        .HasForeignKey("CommercialLCTypeId");

                    b.HasOne("GTERP.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.DocumentStatus", "DocumentStatus")
                        .WithMany()
                        .HasForeignKey("DocumentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ItemDesc", "ItemDescs")
                        .WithMany()
                        .HasForeignKey("ItemDescId");

                    b.HasOne("GTERP.Models.ItemGroup", "ItemGroups")
                        .WithMany()
                        .HasForeignKey("ItemGroupId");

                    b.HasOne("GTERP.Models.COM_MachinaryLC_Master", "COM_MachinaryLC_Master")
                        .WithMany()
                        .HasForeignKey("MachinaryLCId");

                    b.HasOne("GTERP.Models.SupplierInformation", "SupplierInformations")
                        .WithMany()
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.UnitMaster", "UnitMaster")
                        .WithMany()
                        .HasForeignKey("UnitMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.COM_CommercialInvoice_Sub", b =>
                {
                    b.HasOne("GTERP.Models.COM_CommercialInvoice", "COM_CommercialInvoices")
                        .WithMany("COM_CommercialInvoice_Subs")
                        .HasForeignKey("COM_CommercialInvoicesCommercialInvoiceId");

                    b.HasOne("GTERP.Models.ItemDesc", "ItemDescs")
                        .WithMany()
                        .HasForeignKey("ItemDescId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.COM_DocumentAcceptance_Details", b =>
                {
                    b.HasOne("GTERP.Models.COM_DocumentAcceptance_Master", "COM_DocumentAcceptance_Master")
                        .WithMany("COM_DocumentAcceptance_Details")
                        .HasForeignKey("COM_DocumentAcceptance_MasterBillsOfExchangeId");

                    b.HasOne("GTERP.Models.COM_CommercialInvoice", "COM_CommercialInvoice")
                        .WithMany()
                        .HasForeignKey("CommercialInvoiceId");
                });

            modelBuilder.Entity("GTERP.Models.COM_DocumentAcceptance_Master", b =>
                {
                    b.HasOne("GTERP.Models.ApprovedBy", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("GTERP.Models.COM_BBLC_Master", "COM_BBLC_Master")
                        .WithMany()
                        .HasForeignKey("BBLCId");

                    b.HasOne("GTERP.Models.BuyerInformation", "BuyerInformation")
                        .WithMany()
                        .HasForeignKey("BuyerInformationBuyerId");

                    b.HasOne("GTERP.Models.CommercialCompany", "CommercialCompanys")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId");

                    b.HasOne("GTERP.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.COM_GroupLC_Main", "COM_GroupLC_Main")
                        .WithMany()
                        .HasForeignKey("GroupLCId");

                    b.HasOne("GTERP.Models.SupplierInformation", "SupplierInformations")
                        .WithMany()
                        .HasForeignKey("SupplierId");
                });

            modelBuilder.Entity("GTERP.Models.COM_GroupLC_Main", b =>
                {
                    b.HasOne("GTERP.Models.BuyerInformation", "BuyerInformation")
                        .WithMany()
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.CommercialCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.COM_GroupLC_Sub", b =>
                {
                    b.HasOne("GTERP.Models.COM_GroupLC_Main", "COM_GroupLC_Mains")
                        .WithMany("COM_GroupLC_Sub")
                        .HasForeignKey("COM_GroupLC_MainsGroupLCId");

                    b.HasOne("GTERP.Models.COM_MasterLC", "COM_MasterLC")
                        .WithMany("COM_GroupLC_Subs")
                        .HasForeignKey("COM_MasterLCMasterLCID");
                });

            modelBuilder.Entity("GTERP.Models.COM_MachinaryLC_Details", b =>
                {
                    b.HasOne("GTERP.Models.COM_MachinaryLC_Master", "COM_MachinaryLC_Master")
                        .WithMany("COM_MachinaryLC_Details")
                        .HasForeignKey("COM_MachinaryLC_MasterMachinaryLCId");

                    b.HasOne("GTERP.Models.COM_ProformaInvoice", "COM_ProformaInvoice")
                        .WithMany("COM_MachinaryLC_Details")
                        .HasForeignKey("COM_ProformaInvoicePIId");
                });

            modelBuilder.Entity("GTERP.Models.COM_MachinaryLC_Master", b =>
                {
                    b.HasOne("GTERP.Models.CommercialCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId");

                    b.HasOne("GTERP.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.DayList", "daylists")
                        .WithMany()
                        .HasForeignKey("DayListId");

                    b.HasOne("GTERP.Models.Destination", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ItemGroup", "ItemGroups")
                        .WithMany()
                        .HasForeignKey("ItemGroupId");

                    b.HasOne("GTERP.Models.LienBank", "LienBank")
                        .WithMany()
                        .HasForeignKey("LienBankId");

                    b.HasOne("GTERP.Models.OpeningBank", "OpeningBank")
                        .WithMany()
                        .HasForeignKey("OpeningBankId");

                    b.HasOne("GTERP.Models.PaymentTerms", "PaymentTermss")
                        .WithMany()
                        .HasForeignKey("PaymentTermsId");

                    b.HasOne("GTERP.Models.PortOfDischarge", "PortOfDischarge")
                        .WithMany()
                        .HasForeignKey("PortOfDischargeId");

                    b.HasOne("GTERP.Models.PortOfLoading", "PortOfLoading")
                        .WithMany()
                        .HasForeignKey("PortOfLoadingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ShipMode", "ShipMode")
                        .WithMany()
                        .HasForeignKey("ShipModeId");

                    b.HasOne("GTERP.Models.SupplierInformation", "SupplierInformation")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("GTERP.Models.TradeTerm", "TradeTerms")
                        .WithMany()
                        .HasForeignKey("TradeTermId");
                });

            modelBuilder.Entity("GTERP.Models.COM_MachineryLCDetails", b =>
                {
                    b.HasOne("GTERP.Models.COM_MachineryLCMaster", "COM_MachineryLCMaster")
                        .WithMany("COM_MachineryLCDetailses")
                        .HasForeignKey("MachineryLCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.WorkOrderMaster", "WorkOrderMaster")
                        .WithMany("COM_MachineryLCDetailss")
                        .HasForeignKey("WorkOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.COM_MachineryLCMaster", b =>
                {
                    b.HasOne("GTERP.Models.PaymentTerms", "PaymentTerms")
                        .WithMany()
                        .HasForeignKey("PaymentTermsId");

                    b.HasOne("GTERP.Models.SupplierInformation", "SupplierInformation")
                        .WithMany()
                        .HasForeignKey("SupplierId");
                });

            modelBuilder.Entity("GTERP.Models.COM_MasterLC", b =>
                {
                    b.HasOne("GTERP.Models.BankAccountNo", "BankAccountNos")
                        .WithMany()
                        .HasForeignKey("BankAccountNosBankAccountId");

                    b.HasOne("GTERP.Models.BuyerGroup", "BuyerGroups")
                        .WithMany()
                        .HasForeignKey("BuyerGroupID");

                    b.HasOne("GTERP.Models.BuyerInformation", "BuyerInformations")
                        .WithMany()
                        .HasForeignKey("BuyerInformationsBuyerId");

                    b.HasOne("GTERP.Models.CommercialCompany", "CommercialCompanies")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Currency", "Currency")
                        .WithMany("COM_MasterLC")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.DayList", "DayList")
                        .WithMany()
                        .HasForeignKey("DayListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Destination", "Destinations")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.LCNature", "LCNature")
                        .WithMany()
                        .HasForeignKey("LCNatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.LCStatus", "LCStatus")
                        .WithMany()
                        .HasForeignKey("LCStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.LCType", "LCType")
                        .WithMany()
                        .HasForeignKey("LCTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.LienBank", "LienBank")
                        .WithMany("COM_MasterLC")
                        .HasForeignKey("LienBankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.OpeningBank", "OpeningBank")
                        .WithMany("COM_MasterLC")
                        .HasForeignKey("OpeningBankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PaymentTerms", "PaymentTerms")
                        .WithMany()
                        .HasForeignKey("PaymentTermsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PortOfDischarge", "PortOfDischarge")
                        .WithMany("COM_MasterLC")
                        .HasForeignKey("PortOfDischargeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PortOfLoading", "PortOfLoading")
                        .WithMany("COM_MasterLC")
                        .HasForeignKey("PortOfLoadingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ShipMode", "ShipModes")
                        .WithMany()
                        .HasForeignKey("ShipModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.SupplierInformation", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("GTERP.Models.TradeTerm", "TradeTerms")
                        .WithMany()
                        .HasForeignKey("TradeTermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.UnitMaster", "UnitMaster")
                        .WithMany()
                        .HasForeignKey("UnitMasterId");
                });

            modelBuilder.Entity("GTERP.Models.COM_MasterLCExport", b =>
                {
                    b.HasOne("GTERP.Models.COM_MasterLC", "COM_MasterLC")
                        .WithMany("COM_MasterLCExport")
                        .HasForeignKey("COM_MasterLCMasterLCID");

                    b.HasOne("GTERP.Models.ExportOrder", "ExportOrders")
                        .WithMany()
                        .HasForeignKey("ExportOrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.COM_MasterLC_Details", b =>
                {
                    b.HasOne("GTERP.Models.COM_MasterLC", "COM_MasterLC")
                        .WithMany("COM_MasterLC_Details")
                        .HasForeignKey("MasterLCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.UnitMaster", "UnitMaster")
                        .WithMany()
                        .HasForeignKey("UnitMasterId");
                });

            modelBuilder.Entity("GTERP.Models.COM_ProformaInvoice", b =>
                {
                    b.HasOne("GTERP.Models.BankAccountNoLienBank", "BankAccountNoLienBanks")
                        .WithMany()
                        .HasForeignKey("BankAccountNoLienBanksLienBankAccountId");

                    b.HasOne("GTERP.Models.BankAccountNo", "BankAccountNos")
                        .WithMany()
                        .HasForeignKey("BankAccountNosBankAccountId");

                    b.HasOne("GTERP.Models.COM_GroupLC_Main", "COM_GroupLC_Mains")
                        .WithMany()
                        .HasForeignKey("COM_GroupLC_MainsGroupLCId");

                    b.HasOne("GTERP.Models.CommercialCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId");

                    b.HasOne("GTERP.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("GTERP.Models.DayList", "DayList")
                        .WithMany()
                        .HasForeignKey("DayListId");

                    b.HasOne("GTERP.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("GTERP.Models.ItemDesc", "ItemDescs")
                        .WithMany()
                        .HasForeignKey("ItemDescId");

                    b.HasOne("GTERP.Models.ItemGroup", "ItemGroups")
                        .WithMany()
                        .HasForeignKey("ItemGroupId");

                    b.HasOne("GTERP.Models.OpeningBank", "OpeningBanks")
                        .WithMany()
                        .HasForeignKey("OpeningBankId");

                    b.HasOne("GTERP.Models.PaymentTerms", "PaymentTerms")
                        .WithMany()
                        .HasForeignKey("PaymentTermsId");

                    b.HasOne("GTERP.Models.SupplierInformation", "SupplierInformation")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("GTERP.Models.UnitMaster", "UnitMaster")
                        .WithMany()
                        .HasForeignKey("UnitMasterId");
                });

            modelBuilder.Entity("GTERP.Models.COM_ProformaInvoice_Sub", b =>
                {
                    b.HasOne("GTERP.Models.COM_ProformaInvoice", "Com_proformaInvoices")
                        .WithMany("COM_ProformaInvoice_Subs")
                        .HasForeignKey("Com_proformaInvoicesPIId");

                    b.HasOne("GTERP.Models.ItemDesc", "ItemDescs")
                        .WithMany()
                        .HasForeignKey("ItemDescId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.Cat_Designation", b =>
                {
                    b.HasOne("GTERP.Models.Cat_Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId");
                });

            modelBuilder.Entity("GTERP.Models.Cat_PoliceStation", b =>
                {
                    b.HasOne("GTERP.Models.Cat_District", "Cat_District")
                        .WithMany()
                        .HasForeignKey("DistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.Cat_PostOffice", b =>
                {
                    b.HasOne("GTERP.Models.Cat_District", "Cat_District")
                        .WithMany()
                        .HasForeignKey("DistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.Cat_Section", b =>
                {
                    b.HasOne("GTERP.Models.Cat_Department", "Dept")
                        .WithMany("Cat_Section")
                        .HasForeignKey("DeptId");
                });

            modelBuilder.Entity("GTERP.Models.Cat_SubSection", b =>
                {
                    b.HasOne("GTERP.Models.Cat_Department", "Dept")
                        .WithMany("Cat_SubSection")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Section", "Sect")
                        .WithMany("Cat_SubSection")
                        .HasForeignKey("SectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.ChartOfAccount", b =>
                {
                    b.HasOne("GTERP.Models.ChartOfAccount", "ParentChartOfAccount")
                        .WithMany("ChartOfAccountChildren")
                        .HasForeignKey("ParentID");
                });

            modelBuilder.Entity("GTERP.Models.City", b =>
                {
                    b.HasOne("GTERP.Models.State", "vStateCity")
                        .WithMany("vProducts")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.Company", b =>
                {
                    b.HasOne("GTERP.Models.BusinessType", "vBusinessTypeCompany")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Country", "vCountryCompany")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.CompanyPermission", b =>
                {
                    b.HasOne("GTERP.Models.Company", "vCompany")
                        .WithMany()
                        .HasForeignKey("vCompanyComId");
                });

            modelBuilder.Entity("GTERP.Models.Consignee", b =>
                {
                    b.HasOne("GTERP.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.Customer", b =>
                {
                    b.HasOne("GTERP.Models.Country", "vCustomerCountry")
                        .WithMany("vCustomer")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.CustomerContact", b =>
                {
                    b.HasOne("GTERP.Models.Customer", "vCustomer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.Destination", b =>
                {
                    b.HasOne("GTERP.Models.Country", "Countrys")
                        .WithMany()
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("GTERP.Models.Employee", b =>
                {
                    b.HasOne("GTERP.Models.Employee", "EmployeeHOD")
                        .WithMany()
                        .HasForeignKey("BaseEmployeeId");

                    b.HasOne("GTERP.Models.Cat_SubSection", "Cat_SubSection")
                        .WithMany()
                        .HasForeignKey("Cat_SubSectionSubSectId");

                    b.HasOne("GTERP.Models.CommercialCompany", "CommercialCompany")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.ExportInvoiceDetails", b =>
                {
                    b.HasOne("GTERP.Models.COM_MasterLC_Details", "COM_MasterLC_Detail")
                        .WithMany("ExportInvoiceDetails")
                        .HasForeignKey("COM_MasterLC_DetailMasterLCDetailsID");

                    b.HasOne("GTERP.Models.ExportInvoiceMaster", "ExportInvoiceMasters")
                        .WithMany("ExportInvoiceDetails")
                        .HasForeignKey("ExportInvoiceMastersInvoiceId");

                    b.HasOne("GTERP.Models.UnitMaster", "UnitMaster")
                        .WithMany()
                        .HasForeignKey("UnitMasterId");
                });

            modelBuilder.Entity("GTERP.Models.ExportInvoiceMaster", b =>
                {
                    b.HasOne("GTERP.Models.BankAccountNo", "BankAccountNos")
                        .WithMany()
                        .HasForeignKey("BankAccountNosBankAccountId");

                    b.HasOne("GTERP.Models.BuyerGroup", "BuyerGroups")
                        .WithMany()
                        .HasForeignKey("BuyerGroupId");

                    b.HasOne("GTERP.Models.BuyerInformation", "BuyerInformation")
                        .WithMany()
                        .HasForeignKey("BuyerInformationBuyerId");

                    b.HasOne("GTERP.Models.COM_MasterLC", "COM_MasterLC")
                        .WithMany("ExportInvoiceMasters")
                        .HasForeignKey("COM_MasterLCMasterLCID");

                    b.HasOne("GTERP.Models.CommercialCompany", "CommercialCompany")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId");

                    b.HasOne("GTERP.Models.Destination", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId");

                    b.HasOne("GTERP.Models.NotifyParty", "NotifyPartyFirst")
                        .WithMany()
                        .HasForeignKey("FirstNotifyPartyId");

                    b.HasOne("GTERP.Models.CommercialCompany", "ComercialCompanyss")
                        .WithMany()
                        .HasForeignKey("ManufactureId");

                    b.HasOne("GTERP.Models.OpeningBank", "OpeningBank")
                        .WithMany()
                        .HasForeignKey("OpeningBankId");

                    b.HasOne("GTERP.Models.PortOfDischarge", "PortOfDischarge")
                        .WithMany()
                        .HasForeignKey("PortOfDischargeId");

                    b.HasOne("GTERP.Models.PortOfLoading", "PortOfLoading")
                        .WithMany()
                        .HasForeignKey("PortOfLoadingId");

                    b.HasOne("GTERP.Models.NotifyParty", "NotifyPartySecound")
                        .WithMany()
                        .HasForeignKey("SecoundNotifyPartyId");

                    b.HasOne("GTERP.Models.ShipMode", "ShipMode")
                        .WithMany()
                        .HasForeignKey("ShipModeId");

                    b.HasOne("GTERP.Models.SupplierInformation", "SupplierInformation")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("GTERP.Models.NotifyParty", "NotifyPartyThird")
                        .WithMany()
                        .HasForeignKey("ThirdNotifyPartyId");

                    b.HasOne("GTERP.Models.TradeTerm", "Tradeterms")
                        .WithMany()
                        .HasForeignKey("TradeTermId");
                });

            modelBuilder.Entity("GTERP.Models.ExportInvoicePackingList", b =>
                {
                    b.HasOne("GTERP.Models.ExportInvoiceDetails", "ExportInvoiceDetailss")
                        .WithMany("ExportInvoicePackingLists")
                        .HasForeignKey("ExportInvoiceDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.ExportOrder", b =>
                {
                    b.HasOne("GTERP.Models.Destination", "Destination")
                        .WithMany("ExportOrders")
                        .HasForeignKey("DestinationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ExportOrderCategory", "ExportOrderCategorys")
                        .WithMany()
                        .HasForeignKey("ExportOrderCategoryId");

                    b.HasOne("GTERP.Models.ExportOrderStatus", "ExportOrderStatus")
                        .WithMany()
                        .HasForeignKey("ExportOrderStatusId");

                    b.HasOne("GTERP.Models.ShipMode", "ShipModes")
                        .WithMany()
                        .HasForeignKey("ShipModeId");

                    b.HasOne("GTERP.Models.StyleInformation", "StyleInformation")
                        .WithMany("ExportOrders")
                        .HasForeignKey("StyleInformationStyleId");

                    b.HasOne("GTERP.Models.UnitMaster", "UnitMaster")
                        .WithMany("ExportOrders")
                        .HasForeignKey("UnitMasterId");
                });

            modelBuilder.Entity("GTERP.Models.ExportRealizationBankInfo", b =>
                {
                    b.HasOne("GTERP.Models.BuyerGroup", "BuyerGroups")
                        .WithMany()
                        .HasForeignKey("BuyerGroupId");

                    b.HasOne("GTERP.Models.CommercialCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId");

                    b.HasOne("GTERP.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");
                });

            modelBuilder.Entity("GTERP.Models.ExportRealizationDetails", b =>
                {
                    b.HasOne("GTERP.Models.ExportRealizationMaster", "ExportRealizationMaster")
                        .WithMany("ExportRealizationDetails")
                        .HasForeignKey("ExportRealizationMasterRealizationId");

                    b.HasOne("GTERP.Models.ExportInvoiceMaster", "ExportInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("InvoiceId");
                });

            modelBuilder.Entity("GTERP.Models.ExportRealizationMaster", b =>
                {
                    b.HasOne("GTERP.Models.BuyerInformation", "BuyerInformation")
                        .WithMany()
                        .HasForeignKey("BuyerInformationBuyerId");

                    b.HasOne("GTERP.Models.COM_MasterLC", "COM_MasterLC")
                        .WithMany()
                        .HasForeignKey("COM_MasterLCMasterLCID");

                    b.HasOne("GTERP.Models.SupplierInformation", "SupplierInformation")
                        .WithMany()
                        .HasForeignKey("SupplierId");
                });

            modelBuilder.Entity("GTERP.Models.ExportRealization_Details", b =>
                {
                    b.HasOne("GTERP.Models.ExportInvoiceMaster", "ExportInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("ExportInvoiceMasterInvoiceId");

                    b.HasOne("GTERP.Models.ExportRealization_Master", "ExportRealization_Masters")
                        .WithMany("ExportRealization_Details")
                        .HasForeignKey("ExportRealization_MastersRealizationId");
                });

            modelBuilder.Entity("GTERP.Models.ExportRealization_Master", b =>
                {
                    b.HasOne("GTERP.Models.COM_MasterLC", "COM_MasterLC")
                        .WithMany()
                        .HasForeignKey("COM_MasterLCMasterLCID");
                });

            modelBuilder.Entity("GTERP.Models.FileDetail", b =>
                {
                    b.HasOne("GTERP.Models.Support", "Support")
                        .WithMany("FileDetails")
                        .HasForeignKey("SupportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.HR_AttFixed", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Shift", "Cat_Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_AttStatus", "Cat_AttStatus")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Address", b =>
                {
                    b.HasOne("GTERP.Models.Cat_District", "Cat_DistrictCurr")
                        .WithMany()
                        .HasForeignKey("EmpCurrDistId");

                    b.HasOne("GTERP.Models.Cat_PostOffice", "Cat_PostOfficeCurr")
                        .WithMany()
                        .HasForeignKey("EmpCurrPOId");

                    b.HasOne("GTERP.Models.Cat_PoliceStation", "Cat_PoliceStationCurr")
                        .WithMany()
                        .HasForeignKey("EmpCurrPSId");

                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithOne("HR_Emp_Address")
                        .HasForeignKey("GTERP.Models.HR_Emp_Address", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_District", "Cat_DistrictPer")
                        .WithMany()
                        .HasForeignKey("EmpPerDistId");

                    b.HasOne("GTERP.Models.Cat_PostOffice", "Cat_PostOfficePer")
                        .WithMany()
                        .HasForeignKey("EmpPerPOId");

                    b.HasOne("GTERP.Models.Cat_PoliceStation", "Cat_PoliceStationPer")
                        .WithMany()
                        .HasForeignKey("EmpPerPSId");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_BankInfo", b =>
                {
                    b.HasOne("GTERP.Models.Cat_AccountType", "Cat_AccountType")
                        .WithMany()
                        .HasForeignKey("AccTypeId");

                    b.HasOne("GTERP.Models.Cat_Bank", "Cat_Bank")
                        .WithMany()
                        .HasForeignKey("BankId");

                    b.HasOne("GTERP.Models.Cat_BankBranch", "Cat_BankBranch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithOne("HR_Emp_BankInfo")
                        .HasForeignKey("GTERP.Models.HR_Emp_BankInfo", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_PayMode", "Cat_PayMode")
                        .WithMany()
                        .HasForeignKey("PayModeId");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Education", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany("HR_Emp_Educations")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Experience", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany("HR_Emp_Experiences")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Family", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithOne("HR_Emp_Family")
                        .HasForeignKey("GTERP.Models.HR_Emp_Family", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Image", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithOne("HR_Emp_Image")
                        .HasForeignKey("GTERP.Models.HR_Emp_Image", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Increment", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithOne("HR_Emp_Increment")
                        .HasForeignKey("GTERP.Models.HR_Emp_Increment", "EmpId");

                    b.HasOne("GTERP.Models.HR_IncType", "HR_IncType")
                        .WithMany()
                        .HasForeignKey("IncTypeId");

                    b.HasOne("GTERP.Models.Cat_Department", "Cat_DepartmentNew")
                        .WithMany()
                        .HasForeignKey("NewDeptId");

                    b.HasOne("GTERP.Models.Cat_Designation", "Cat_DesignationNew")
                        .WithMany()
                        .HasForeignKey("NewDesigId");

                    b.HasOne("GTERP.Models.Cat_Emp_Type", "Cat_Emp_TypeNew")
                        .WithMany()
                        .HasForeignKey("NewEmpTypeId");

                    b.HasOne("GTERP.Models.Cat_Gender", "Cat_GenderNew")
                        .WithMany()
                        .HasForeignKey("NewGenderId");

                    b.HasOne("GTERP.Models.Cat_Section", "Cat_SectionNew")
                        .WithMany()
                        .HasForeignKey("NewSectId");

                    b.HasOne("GTERP.Models.Cat_Unit", "Cat_UnitNew")
                        .WithMany()
                        .HasForeignKey("NewUnitId");

                    b.HasOne("GTERP.Models.Cat_Department", "Cat_DepartmentOld")
                        .WithMany()
                        .HasForeignKey("OldDeptId");

                    b.HasOne("GTERP.Models.Cat_Designation", "Cat_DesignationOld")
                        .WithMany()
                        .HasForeignKey("OldDesigId");

                    b.HasOne("GTERP.Models.Cat_Emp_Type", "Cat_Emp_TypeOld")
                        .WithMany()
                        .HasForeignKey("OldEmpTypeId");

                    b.HasOne("GTERP.Models.Cat_Gender", "Cat_GenderOld")
                        .WithMany()
                        .HasForeignKey("OldGenderId");

                    b.HasOne("GTERP.Models.Cat_Section", "Cat_SectionOld")
                        .WithMany()
                        .HasForeignKey("OldSectId");

                    b.HasOne("GTERP.Models.Cat_Unit", "Cat_UnitOld")
                        .WithMany()
                        .HasForeignKey("OldUnitId");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Info", b =>
                {
                    b.HasOne("GTERP.Models.Cat_BloodGroup", "Cat_BloodGroup")
                        .WithMany()
                        .HasForeignKey("BloodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Department", "Cat_Department")
                        .WithMany()
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Designation", "Cat_Designation")
                        .WithMany()
                        .HasForeignKey("DesigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Emp_Type", "Cat_Emp_Type")
                        .WithMany()
                        .HasForeignKey("EmpTypeId");

                    b.HasOne("GTERP.Models.Cat_Floor", "Cat_Floor")
                        .WithMany()
                        .HasForeignKey("FloorId");

                    b.HasOne("GTERP.Models.Cat_Gender", "Cat_Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("GTERP.Models.Cat_Grade", "Cat_Grade")
                        .WithMany()
                        .HasForeignKey("GradeId");

                    b.HasOne("GTERP.Models.Cat_Line", "Cat_Line")
                        .WithMany()
                        .HasForeignKey("LineId");

                    b.HasOne("GTERP.Models.Cat_Religion", "Cat_Religion")
                        .WithMany()
                        .HasForeignKey("RelgionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Section", "Cat_Section")
                        .WithMany()
                        .HasForeignKey("SectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Shift", "Cat_Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_SubSection", "Cat_SubSection")
                        .WithMany()
                        .HasForeignKey("SubSectId");

                    b.HasOne("GTERP.Models.Cat_Unit", "Cat_Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Nominee", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithOne("HR_Emp_Nominee")
                        .HasForeignKey("GTERP.Models.HR_Emp_Nominee", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_PersonalInfo", b =>
                {
                    b.HasOne("GTERP.Models.Cat_BuildingType", "Cat_BuildingType")
                        .WithMany()
                        .HasForeignKey("BId");

                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithOne("HR_Emp_PersonalInfo")
                        .HasForeignKey("GTERP.Models.HR_Emp_PersonalInfo", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Released", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Salary", b =>
                {
                    b.HasOne("GTERP.Models.Cat_BuildingType", "Cat_BuildingTypeHC")
                        .WithMany()
                        .HasForeignKey("BId");

                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_LocationHB")
                        .WithMany()
                        .HasForeignKey("HBLId");

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_Location1")
                        .WithMany()
                        .HasForeignKey("LId1");

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_Location2")
                        .WithMany()
                        .HasForeignKey("LId2");

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_Location3")
                        .WithMany()
                        .HasForeignKey("LId3");

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_LocationMC")
                        .WithMany()
                        .HasForeignKey("MCLId");

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_LocationPF")
                        .WithMany()
                        .HasForeignKey("PFLId");

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_LocationWelfare")
                        .WithMany()
                        .HasForeignKey("WelfareLId");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_ShiftInput", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Shift", "Cat_Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.HR_Leave_Avail", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithOne("HR_Leave_Avail")
                        .HasForeignKey("GTERP.Models.HR_Leave_Avail", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Leave_Type", "Cat_Leave_Type")
                        .WithMany()
                        .HasForeignKey("LTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.HR_Leave_Balance", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithOne("HR_Leave_Balance")
                        .HasForeignKey("GTERP.Models.HR_Leave_Balance", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.InvoiceSub", b =>
                {
                    b.HasOne("GTERP.Models.InvoiceMain", "InvoiceMain")
                        .WithMany("InvoiceSubs")
                        .HasForeignKey("InvoiceMainInvoiceId");

                    b.HasOne("GTERP.Models.SoftwarePackage", "vsoftwarepackage")
                        .WithMany()
                        .HasForeignKey("SoftwarePackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.InvoiceTermsSub", b =>
                {
                    b.HasOne("GTERP.Models.InvoiceMain", "InvoiceMain")
                        .WithMany("InvoiceTermsSubs")
                        .HasForeignKey("InvoiceMainInvoiceId");
                });

            modelBuilder.Entity("GTERP.Models.ItemDesc", b =>
                {
                    b.HasOne("GTERP.Models.ItemGroup", "ItemGroups")
                        .WithMany()
                        .HasForeignKey("ItemGroupId");
                });

            modelBuilder.Entity("GTERP.Models.LienBank", b =>
                {
                    b.HasOne("GTERP.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.MenuPermission_Details", b =>
                {
                    b.HasOne("GTERP.Models.MenuPermission_Master", "MenuPermissionMasters")
                        .WithMany("MenuPermission_Details")
                        .HasForeignKey("MenuPermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ModuleMenu", "ModuleMenus")
                        .WithMany("MenuPermissionDetails")
                        .HasForeignKey("ModuleMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.ModuleGroup", b =>
                {
                    b.HasOne("GTERP.Models.Module", "vModule")
                        .WithMany("vModuleGroup")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.ModuleMenu", b =>
                {
                    b.HasOne("GTERP.Models.ImageCriteria", "vImageCriteria")
                        .WithMany()
                        .HasForeignKey("ImageCriteriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ModuleGroup", "vModuleGroup")
                        .WithMany("vModuleMenu")
                        .HasForeignKey("ModuleGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Module", "vModule")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ModuleMenu", "ParentModuleMenu")
                        .WithMany("ModuleMenuChildren")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("GTERP.Models.NotifyParty", b =>
                {
                    b.HasOne("GTERP.Models.BuyerInformation", "BuyerInformations")
                        .WithMany()
                        .HasForeignKey("BuyerInformationsBuyerId");

                    b.HasOne("GTERP.Models.Country", "Countrys")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("GTERP.Models.PortOfDischarge", "PortOfDischarge")
                        .WithMany()
                        .HasForeignKey("PortOfDischargeId");
                });

            modelBuilder.Entity("GTERP.Models.OpeningBank", b =>
                {
                    b.HasOne("GTERP.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.Payroll_SalaryAddition", b =>
                {
                    b.HasOne("GTERP.Models.Cat_Location", "Cat_Location")
                        .WithMany()
                        .HasForeignKey("AddTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.PortOfDischarge", b =>
                {
                    b.HasOne("GTERP.Models.Country", "Countrys")
                        .WithMany()
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("GTERP.Models.PortOfLoading", b =>
                {
                    b.HasOne("GTERP.Models.Country", "Countrys")
                        .WithMany()
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("GTERP.Models.Product", b =>
                {
                    b.HasOne("GTERP.Models.Category", "vPrimaryCategory")
                        .WithMany("vProducts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Country", "vProductCountry")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.SubCategory", null)
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryId");

                    b.HasOne("GTERP.Models.Unit", "vProductUnit")
                        .WithMany("vProductUnit")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.ProductSerial", b =>
                {
                    b.HasOne("GTERP.Models.PurchaseSub", "PurchaseSub")
                        .WithMany("ProductSerials")
                        .HasForeignKey("PurchaseSubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Warrenty", "vWarrenty")
                        .WithMany("vProductWarrenty")
                        .HasForeignKey("WarrentyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.PurchaseMain", b =>
                {
                    b.HasOne("GTERP.Models.Country", "vCurrencyPurchaseMain")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Supplier", "vSuppliertName")
                        .WithMany("vCountryPurchase")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.PurchaseSub", b =>
                {
                    b.HasOne("GTERP.Models.Product", "vProductName")
                        .WithMany("vPurchaseSub")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PurchaseMain", "PurchaseMain")
                        .WithMany("PurchaseSubs")
                        .HasForeignKey("PurchaseMainPurchaseId");

                    b.HasOne("GTERP.Models.Warehouse", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.PurchaseTermsSub", b =>
                {
                    b.HasOne("GTERP.Models.PurchaseMain", "PurchaseMain")
                        .WithMany("PurchaseTermsSubs")
                        .HasForeignKey("PurchaseMainPurchaseId");
                });

            modelBuilder.Entity("GTERP.Models.SalesMain", b =>
                {
                    b.HasOne("GTERP.Models.Country", "vCurrencySalesMain")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Customer", "vCustomertName")
                        .WithMany("vCountry")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.SalesPaymentSub", b =>
                {
                    b.HasOne("GTERP.Models.PaymentType", "vPaymentType")
                        .WithMany("vTypeSalesSubs")
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.SalesMain", "SalesMain")
                        .WithMany("SalesPaymentSubs")
                        .HasForeignKey("SalesMainSalesId");

                    b.HasOne("GTERP.Models.ChartOfAccount", "vChartofAccounts")
                        .WithMany()
                        .HasForeignKey("vChartofAccountsAccId");
                });

            modelBuilder.Entity("GTERP.Models.SalesSub", b =>
                {
                    b.HasOne("GTERP.Models.Product", "vProductName")
                        .WithMany("vSalesSub")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ProductSerial", "vProductSerial")
                        .WithMany("vSalesSubSerial")
                        .HasForeignKey("ProductSerialId");

                    b.HasOne("GTERP.Models.SalesMain", "SalesMain")
                        .WithMany("SalesSubs")
                        .HasForeignKey("SalesMainSalesId");

                    b.HasOne("GTERP.Models.SalesType", "vSalesTypes")
                        .WithMany("vTypeSalesSubs")
                        .HasForeignKey("SalesTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Warehouse", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.SalesTermsSub", b =>
                {
                    b.HasOne("GTERP.Models.SalesMain", "SalesMain")
                        .WithMany("SalesTermsSubs")
                        .HasForeignKey("SalesMainSalesId");
                });

            modelBuilder.Entity("GTERP.Models.State", b =>
                {
                    b.HasOne("GTERP.Models.Country", "vStateCountry")
                        .WithMany("vStateCountry")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.StyleInformation", b =>
                {
                    b.HasOne("GTERP.Models.BrandInfo", "BrandInfo")
                        .WithMany("StyleInformations")
                        .HasForeignKey("BrandInfoId");

                    b.HasOne("GTERP.Models.BuyerInformation", "BuyerInformation")
                        .WithMany("StyleInformations")
                        .HasForeignKey("BuyerId");

                    b.HasOne("GTERP.Models.CommercialCompany", "Company")
                        .WithMany("StyleInformations")
                        .HasForeignKey("CommercialCompanyId");

                    b.HasOne("GTERP.Models.Currency", "Currency")
                        .WithMany("StyleInformations")
                        .HasForeignKey("CurrencyId");

                    b.HasOne("GTERP.Models.ProductCategory", "ProductCategory")
                        .WithMany("StyleInformations")
                        .HasForeignKey("ProductCategoryId");

                    b.HasOne("GTERP.Models.ProductGroup", "ProductGroup")
                        .WithMany("StyleInformations")
                        .HasForeignKey("ProductGroupId");

                    b.HasOne("GTERP.Models.StyleStatus", "StyleStatus")
                        .WithMany()
                        .HasForeignKey("StyleStatusId");

                    b.HasOne("GTERP.Models.UnitMaster", "UnitMaster")
                        .WithMany()
                        .HasForeignKey("UnitMasterId");
                });

            modelBuilder.Entity("GTERP.Models.SubCategory", b =>
                {
                    b.HasOne("GTERP.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("GTERP.Models.Supplier", b =>
                {
                    b.HasOne("GTERP.Models.Country", "vSupplierCountry")
                        .WithMany("vSupplier")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.SupplierContact", b =>
                {
                    b.HasOne("GTERP.Models.Supplier", "vSupplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.SupplierInformation", b =>
                {
                    b.HasOne("GTERP.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.TermsSerialSub", b =>
                {
                    b.HasOne("GTERP.Models.TermsSub", "vTermsSub")
                        .WithMany("TermsSerialSubs")
                        .HasForeignKey("TermsSubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.TermsSub", b =>
                {
                    b.HasOne("GTERP.Models.TermsMain", "TermsMain")
                        .WithMany("TermsSubs")
                        .HasForeignKey("TermsMainTermsId");
                });

            modelBuilder.Entity("GTERP.Models.UnitMaster", b =>
                {
                    b.HasOne("GTERP.Models.UnitGroup", "UnitGroup")
                        .WithMany("UnitMaster")
                        .HasForeignKey("UnitGroupId");
                });

            modelBuilder.Entity("GTERP.Models.VoucherMain", b =>
                {
                    b.HasOne("GTERP.Models.VoucherType", "VoucherType")
                        .WithMany("VoucherMains")
                        .HasForeignKey("VoucherTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.VoucherSub", b =>
                {
                    b.HasOne("GTERP.Models.ChartOfAccount", "ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("ChartOfAccountAccId");

                    b.HasOne("GTERP.Models.Country", "CountryForeign")
                        .WithMany()
                        .HasForeignKey("CurrencyForeignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.VoucherMain", "VoucherMain")
                        .WithMany("VoucherSubs")
                        .HasForeignKey("VoucherMainVoucherId");
                });

            modelBuilder.Entity("GTERP.Models.VoucherSubChecno", b =>
                {
                    b.HasOne("GTERP.Models.VoucherSub", "VoucherSub")
                        .WithMany("VoucherSubChecnoes")
                        .HasForeignKey("VoucherSubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.VoucherSubSection", b =>
                {
                    b.HasOne("GTERP.Models.Cat_SubSection", "SubSection")
                        .WithMany()
                        .HasForeignKey("SubSectionSubSectId");

                    b.HasOne("GTERP.Models.VoucherSub", "VoucherSub")
                        .WithMany("VoucherSubSections")
                        .HasForeignKey("VoucherSubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GTERP.Models.WorkOrderMaster", b =>
                {
                    b.HasOne("GTERP.Models.ApprovedBy", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.CommercialCompany", "CommercialCompany")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId1");

                    b.HasOne("GTERP.Models.ItemDesc", "ItemDescs")
                        .WithMany()
                        .HasForeignKey("ItemDescId");

                    b.HasOne("GTERP.Models.ItemGroup", "ItemGroups")
                        .WithMany()
                        .HasForeignKey("ItemGroupId");

                    b.HasOne("GTERP.Models.ApprovedBy", "RecommenedBy")
                        .WithMany()
                        .HasForeignKey("RecommenedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.SupplierInformation", "SupplierInformation")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.WorkorderStatus", "WorkorderStatus")
                        .WithMany()
                        .HasForeignKey("WorkOrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
